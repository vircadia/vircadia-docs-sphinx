# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, High Fidelity. © Copyright 2020, Vircadia.
# This file is distributed under the same license as the Vircadia Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Vircadia Docs\n"
"Report-Msgid-Bugs-To: julian.g@posteo.de\n"
"POT-Creation-Date: 2021-06-27 06:23+0000\n"
"PO-Revision-Date: 2022-05-19 00:09+0000\n"
"Last-Translator: Nakkie <z.kanie@gmail.com>\n"
"Language-Team: Japanese <https://weblate.vircadia.dev/projects/"
"vircadia-documentation/script/ja/>\n"
"Language: jp\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.4.2\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/script.rst:9
#: ../../source/script/get-started-with-scripting.rst:3
msgid "Get Started with Scripting"
msgstr "スクリプトをはじめよう"

#: ../../source/script.rst:9 ../../source/script/write-scripts.md:1
msgid "Write Your Own Scripts"
msgstr "スクリプトを作成する"

#: ../../source/script.rst:9
msgid "JavaScript Tips and Tricks"
msgstr "JavaScriptのヒントとテクニック"

#: ../../source/script.rst:9 ../../source/script/interface-scripts.md:1
msgid "Interface Scripts"
msgstr "インターフェイススクリプト"

#: ../../source/script.rst:9 ../../source/script/assignment-client-scripts.md:1
msgid "Assignment Client Scripts"
msgstr "割り当てクライアントスクリプト"

#: ../../source/script.rst:9 ../../source/script/avatar-scripts.md:1
msgid "Avatar Scripts"
msgstr "アバタースクリプト"

#: ../../source/script.rst:9 ../../source/script/client-entity-scripts.md:1
msgid "Client Entity Scripts"
msgstr "クライアントエンティティスクリプト"

#: ../../source/script.rst:9 ../../source/script/server-entity-scripts.md:1
msgid "Server Entity Scripts"
msgstr "サーバーエンティティスクリプト"

#: ../../source/script.rst:9 ../../source/script/midi-tutorial.rst:3
msgid "Tutorial: Use MIDI to Control Your Environment"
msgstr "チュートリアル：MIDIを使用して環境を制御する"

#: ../../source/script.rst:3
msgid "Script"
msgstr "スクリプト"

#: ../../source/script.rst:5
msgid ""
"Vircadia uses scripts (written in JavaScript) for a number of different "
"things: creating content, moving your avatar, playing audio at a specific"
" location, wearing an avatar attachment, and much more."
msgstr ""
"Vircadiaでは、コンテンツの作成、アバターの移動、特定の場所での音声再生、アバターの装着など、さまざまなことでスクリプト（JavaScript）を使"
"っています。"

#: ../../source/script.rst:7
msgid ""
"Throughout this chapter, learn about the different types of scripts and "
"how you can use them to create new experiences:"
msgstr "この章全体を通して、さまざまな種類のスクリプトと、それらを使用して新しいエクスペリエンスを作成する方法について学習します。"

#: ../../source/script/assignment-client-scripts.md:3
msgid ""
"Assignment Client (AC) scripts (also known as \"persistent scripts\") run"
" persistently in a domain and aren't affected by other scripts. These "
"scripts run on an assignment client separate from the Interface, so the "
"script will continue to run until you either remove the script from the "
"domain or you shut down the domain entirely."
msgstr ""
"割り当てクライアント（AC）スクリプト（「永続スクリプト」とも呼ばれます）は、ドメイン内で永続的に実行され、他のスクリプトの影響を受けません。これらのスク"
"リプトは、インターフェイスとは別の割り当てクライアントで実行されるため、ドメインからスクリプトを削除するか、ドメインを完全にシャットダウンするまで、スクリ"
"プトは実行され続けます。"

#: ../../source/script/assignment-client-scripts.md:5
msgid ""
"With AC scripts, you can do things like coordinate actions between "
"entities and avatars, and add virtual pets to greet visitors to your "
"domain."
msgstr ""
"ACスクリプトを使用すると、エンティティとアバター間のアクションを調整したり、仮想ペットを追加してドメインへの訪問者を迎えたりすることができます。"

#: ../../source/script/assignment-client-scripts.md:7
#: ../../source/script/avatar-scripts.md:7
#: ../../source/script/client-entity-scripts.md:7
#: ../../source/script/interface-scripts.md:7
#: ../../source/script/server-entity-scripts.md:5
msgid "**On This Page**"
msgstr "**コンテンツ**"

#: ../../source/script/assignment-client-scripts.md:8
msgid "[Add an AC Script](#add-an-ac-script)"
msgstr "[ACスクリプトを追加](#add-an-ac-script)"

#: ../../source/script/assignment-client-scripts.md:9
msgid "[Example of an AC Script](#example-of-an-ac-script)"
msgstr "[ACスクリプトの例](#example-of-an-ac-script)"

#: ../../source/script/assignment-client-scripts.md:11
msgid "Add an AC Script"
msgstr "ACスクリプトを追加する"

#: ../../source/script/assignment-client-scripts.md:12
msgid ""
"Once you've written and hosted your script, you need to add it to a "
"domain, either your own or one where you have permissions to run an AC "
"script."
msgstr "スクリプトを書き、ホスティングしたら、自分のドメインか、ACスクリプトを実行する権限があるドメインにスクリプトを追加する必要があります。"

#: ../../source/script/assignment-client-scripts.md:14
msgid ""
"Open your 'Domain Administration Panel'. If you are on a local sandbox, "
"open it by clicking on the Vircadia icon in the taskbar notifications and"
" 'click Settings'."
msgstr ""
"「ドメイン管理パネル」を開きます。ローカルサンドボックスを使用している場合は、タスクバー通知のVircadiaアイコンをクリックしてサンドボックスを開き、"
"[設定]をクリックします。"

#: ../../source/script/assignment-client-scripts.md:15
msgid "From the menu, go to **Content > Scripts**."
msgstr "メニューから、**コンテンツ>スクリプト**を選択します。"

#: ../../source/script/assignment-client-scripts.md:16
msgid ""
"In the Persistent Scripts section, click **+** and paste the URL to your "
"script under 'Script URL'.  ![](_images/ac-script.png)"
msgstr ""
"[永続スクリプト]セクションで、[** + **]をクリックし、[スクリプトURL]の下のスクリプトにURLを貼り付けます。![](_images/ac-"
"script.png)"

#: ../../source/script/assignment-client-scripts.md:18
msgid ""
"At the top of the page, click 'Save and Restart'. Now, every time you "
"enter that domain, the AC script will be running."
msgstr "ページの上部にある[保存して再起動]をクリックします。今後は、そのドメインに入るたびに、ACスクリプトが実行されます。"

#: ../../source/script/assignment-client-scripts.md:20
msgid "Example of an AC Script"
msgstr "ACスクリプトの例"

#: ../../source/script/assignment-client-scripts.md:22
msgid ""
"The following script counts the number of entities found in a domain "
"using Vircadia's "
"[EntityViewer](https://apidocs.vircadia.dev/EntityViewer.html)."
msgstr ""
"次のスクリプトは、Vircadiaの[エンティティビューワ] (https://apidocs.vircadia.dev/EntityViewer."
"html)を使用してドメインで見つかったエンティティの数をカウントします。"

#: ../../source/script/assignment-client-scripts.md:54
#: ../../source/script/avatar-scripts.md:78
#: ../../source/script/client-entity-scripts.md:44
#: ../../source/script/get-started-with-scripting.rst:174
#: ../../source/script/interface-scripts.md:37
#: ../../source/script/js-tips.md:200 ../../source/script/midi-tutorial.rst:176
#: ../../source/script/server-entity-scripts.md:57
#: ../../source/script/write-scripts.md:74
msgid "**See Also**"
msgstr "**関連項目**"

#: ../../source/script/assignment-client-scripts.md:56
msgid "[Configure Your Domain Settings](../host/configure-settings)"
msgstr "[ドメイン設定を構成する](../host/configure-settings)"

#: ../../source/script/assignment-client-scripts.md:57
#: ../../source/script/avatar-scripts.md:80
#: ../../source/script/client-entity-scripts.md:46
#: ../../source/script/interface-scripts.md:39
#: ../../source/script/server-entity-scripts.md:59
#: ../../source/script/write-scripts.md:76
msgid "[Get Started with Scripting](get-started-with-scripting)"
msgstr "[スクリプトをはじめよう](get-started-with-scripting)"

#: ../../source/script/assignment-client-scripts.md:58
#: ../../source/script/avatar-scripts.md:81
#: ../../source/script/client-entity-scripts.md:47
#: ../../source/script/interface-scripts.md:40
#: ../../source/script/js-tips.md:202
#: ../../source/script/server-entity-scripts.md:60
msgid "[Write Your Own Scripts](write-scripts)"
msgstr "[スクリプトを書いてみよう](write-scripts)"

#: ../../source/script/avatar-scripts.md:3
msgid ""
"Avatar scripts are bound to an avatar. This means that they run when a "
"user puts on a specific avatar. Likewise, avatar scripts stop running "
"when the avatar is removed or changed. Other users in the domain will be "
"able to see the script in action, but they will not be able to run the "
"script themselves."
msgstr ""
"アバタースクリプトはアバターにバインドされます。つまり、ユーザーが特定のアバターを身につけたときに実行されます。同様に、アバタースクリプトはアバターが削除"
"されたり変更されたりすると、実行を停止します。ドメイン内の他のユーザーは、スクリプトの動作を見ることができますが、自分でスクリプトを実行することはできませ"
"ん。"

#: ../../source/script/avatar-scripts.md:5
msgid ""
"With avatar scripts, you can do things like make your hair flow or create"
" particle clouds around your avatar."
msgstr "アバタースクリプトを使えば、髪をなびかせたり、アバターの周りにパーティクルクラウドを発生させたりすることができます。"

#: ../../source/script/avatar-scripts.md:9
msgid "[Add an Avatar Script](#add-an-avatar-script)"
msgstr "[アバタースクリプトの追加](#add-an-avatar-script)"

#: ../../source/script/avatar-scripts.md:10
msgid "[Example of an Avatar Script](#example-of-an-avatar-script)"
msgstr "[アバタースクリプトの例](#example-of-an-avatar-script)"

#: ../../source/script/avatar-scripts.md:12
msgid "Add an Avatar Script"
msgstr "アバタースクリプトを追加する"

#: ../../source/script/avatar-scripts.md:13
msgid ""
"There are two different ways you can add an avatar script to your FST "
"file: either by using our Package Model tool or by manually adding the "
"script."
msgstr "FSTファイルにアバタースクリプトを追加するには、パッケージモデルツールを使用する方法と、手動でスクリプトを追加する方法の2種類があります。"

#: ../../source/script/avatar-scripts.md:15
msgid "To add an avatar script using the Package Model tools:"
msgstr "パッケージモデルツールを使用してアバタースクリプトを追加するには："

#: ../../source/script/avatar-scripts.md:16
msgid ""
"Create a folder called `scripts` in the same location as your FBX, GLB, "
"or glTF file."
msgstr "FBX、GLB、またはglTFファイルと同じ場所に`scripts`というフォルダを作成します。"

#: ../../source/script/avatar-scripts.md:17
msgid "Copy your avatar script into this new folder."
msgstr "アバタースクリプトをこの新しいフォルダーにコピーします。"

#: ../../source/script/avatar-scripts.md:18
msgid "In Interface, go to **Edit > Package Model as .fst**"
msgstr "インターフェイスにおいて、**[編集]>[パッケージモデル]**に移動します"

#: ../../source/script/avatar-scripts.md:19
msgid ""
"For 'Script Directory', enter the path to the `scripts` folder you "
"created above."
msgstr "[スクリプトディレクトリ]には、上記で作成した`scripts`フォルダへのパスを入力します。"

#: ../../source/script/avatar-scripts.md:21
msgid "To add an avatar script manually:"
msgstr "アバタースクリプトを手動で追加するには："

#: ../../source/script/avatar-scripts.md:22
msgid "Open the FST file for your avatar in the text editor of your choice."
msgstr "選択したテキストエディタでアバターのFSTファイルを開きます。"

#: ../../source/script/avatar-scripts.md:23
msgid ""
"Add a line telling the avatar where to find the script file using the "
"syntax `script = [SCRIPT URL]`.![](_images/add-script.png)"
msgstr ""
"構文`script = [SCRIPT URL]`を使用して、アバターにスクリプトファイルの場所を示す行を追加します。![](_images/add-"
"script.png)"

#: ../../source/script/avatar-scripts.md:25
msgid ""
"You can add multiple scripts to your avatar by adding multiple `script = "
"url` lines."
msgstr "複数の`script = url`行を追加することで、アバターに複数のスクリプトを追加できます。"

#: ../../source/script/avatar-scripts.md:27
msgid "Example of an Avatar Script"
msgstr "アバタースクリプトの例"

#: ../../source/script/avatar-scripts.md:29
msgid ""
"The following script makes your avatar throw balls when its right hand "
"moves."
msgstr "次のスクリプトは、右手が動いたときにアバターにボールを投げさせます。"

#: ../../source/script/avatar-scripts.md:76
msgid ""
"This example script uses the "
"[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.html) namespace to "
"determine if your avatar's hand moves. Upon detecting movement, the "
"script makes your avatar launch balls. It also uses some other namespaces"
" such as [Entities](https://apidocs.vircadia.dev/Entities.html) (to "
"create the ball you will launch) and "
"[Vec3](https://apidocs.vircadia.dev/Vec3.html) (to determine the right "
"positions and distances). Add it to your avatar to see how it works."
msgstr ""
"このサンプルスクリプトは、[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.html)名前空間を使用して、"
"アバターの手が動くかどうかを判断します。動きを検出すると、スクリプトはアバターにボールを発射させます。また、[Entities](https://apid"
"ocs.vircadia.dev/Entities.html)(起動するボールを作成するため)や[Vec3](https://apidocs."
"vircadia.dev/)などの他の名前も使用します。[Vec3](https://apidocs.vircadia.dev/Vec3.html) "
"(適切な位置と距離を決定するため)。それをアバターに追加して、どのように機能するかを確認してください。"

#: ../../source/script/avatar-scripts.md:82
#: ../../source/script/client-entity-scripts.md:48
#: ../../source/script/js-tips.md:203
#: ../../source/script/server-entity-scripts.md:61
#: ../../source/script/write-scripts.md:79
msgid "[API Reference](https://apidocs.vircadia.dev)"
msgstr "[APIリファレンス](https://apidocs.vircadia.dev)"

#: ../../source/script/client-entity-scripts.md:3
msgid ""
"You can make content in Vircadia interactive by attaching scripts to "
"entities. *Client entity scripts* are entity scripts that run locally on "
"each user's computer. When a user comes into contact with the entity, it "
"will \"preload\" (or run) the script, then \"unload\" (or stop) the "
"script when the user leaves."
msgstr ""
"スクリプトをエンティティに添付することで、Vircadiaのコンテンツをインタラクティブにすることができます。*クライアントエンティティスクリプト*は、各"
"ユーザーのコンピューターでローカルに実行されるエンティティスクリプトです。ユーザーがエンティティに接触すると、スクリプトが「プリロード」（または実行）され"
"、ユーザーが離れるときにスクリプトが「アンロード」（または停止）されます。"

#: ../../source/script/client-entity-scripts.md:5
msgid ""
"There can be (and typically are) multiple entities in a domain, and each "
"one can have a different client entity script associated with it."
msgstr ""
"ドメインには複数のエンティティが存在する可能性があり（通常は存在します）、各エンティティに異なるクライアントエンティティスクリプトを関連付けることができま"
"す。"

#: ../../source/script/client-entity-scripts.md:8
msgid ""
"[Attach a Client Entity Script to an Entity](#attach-a-client-entity-"
"script-to-an-entity)"
msgstr ""
"[クライアントエンティティスクリプトをエンティティにアタッチする](#attach-a-client-entity-script-to-an-"
"entity)"

#: ../../source/script/client-entity-scripts.md:9
msgid "[Example of a Client Entity Script](#example-of-a-client-entity-script)"
msgstr "[クライアントエンティティスクリプトの例](#example-of-a-client-entity-script)"

#: ../../source/script/client-entity-scripts.md:11
msgid "Attach a Client Entity Script to an Entity"
msgstr "クライアントエンティティスクリプトをエンティティに添付する"

#: ../../source/script/client-entity-scripts.md:12
msgid "To attach a client entity script to an entity:"
msgstr "クライアントエンティティスクリプトをエンティティにアタッチするには："

#: ../../source/script/client-entity-scripts.md:13
#: ../../source/script/server-entity-scripts.md:12
msgid "In Interface, pull up your tablet or HUD and go to **Create**."
msgstr "インターフェイスにおいて、タブレットまたはHUDをプルアップし、**作成**に移動します。"

#: ../../source/script/client-entity-scripts.md:14
#: ../../source/script/server-entity-scripts.md:13
msgid ""
"Select the entity you'd like to script by either clicking on it in "
"Interface or finding it in the 'Entity List'."
msgstr "インターフェースでクリックするか、[エンティティリスト]で検索して、スクリプトを作成するエンティティを選択します。"

#: ../../source/script/client-entity-scripts.md:15
#: ../../source/script/server-entity-scripts.md:14
msgid ""
"In the **Create** app, go to the 'Properties' tab and scroll down to the "
"'Behavior' section."
msgstr "**作成**アプリで、[プロパティ]タブに移動し、[動作]セクションまで下にスクロールします。"

#: ../../source/script/client-entity-scripts.md:16
msgid "For Script, enter the URL to your client entity script."
msgstr "スクリプトに、クライアントエンティティスクリプトのURLを入力します。"

#: ../../source/script/client-entity-scripts.md:23
msgid "Example of a Client Entity Script"
msgstr "クライアントエンティティスクリプトの例"

#: ../../source/script/client-entity-scripts.md:24
msgid ""
"The following script changes the color of a non-model entity (such as a "
"box or a sphere) when you click on it:"
msgstr "次のスクリプトは、モデル以外のエンティティ（ボックスや球など）をクリックすると、その色を変更します。"

#: ../../source/script/client-entity-scripts.md:42
msgid ""
"This example is written as a JavaScript class prototype function, and it "
"uses the mouse event "
"[clickDownOnEntity()](https://apidocs.vircadia.dev/Entities.html#.sendClickDownOnEntity)."
" When the user clicks on an entity, `clickDownOnEntity()` triggers the "
"function associated with that click event. In this case, it changes the "
"entity's color back and forth between yellow and magenta."
msgstr ""
"この例は、JavaScriptクラスのプロトタイプ関数として記述されており、マウスイベント[clickDownOnEntity()](https://ap"
"idocs.vircadia.dev/Entities.html#."
"sendClickDownOnEntity)を使用しています。ユーザーがエンティティをクリックすると、 `clickDownOnEntity()`がそのク"
"リックイベントに関連付けられた関数をトリガーします。この場合、エンティティの色が黄色とマゼンタの間で前後に変化します。"

#: ../../source/script/get-started-with-scripting.rst:5
msgid ""
"Many of the scripts in Vircadia run behind the scenes, so that you don't "
"even know they're running. However, if you want to create some advanced "
"behavior, you may need to :doc:`write your own scripts <write-scripts>` "
"to make sure everything works correctly."
msgstr ""
"Vircadiaのスクリプトの多くは舞台裏で実行されているため、実行されていることすらわかりません。ただし、高度な動作を作成する場合は、すべてが正しく機能"
"することを確認するために、:doc:`独自のスクリプト <write-scripts>` を作成する必要があります。"

#: ../../source/script/get-started-with-scripting.rst:7
msgid ""
"This page ensures that you know what type of script to use and helps you "
"get started running your own simple scripts."
msgstr "このページでは、使用するスクリプトの種類を確認し、独自の簡単なスクリプトの実行を開始するのに役立ちます。"

#: ../../source/script/get-started-with-scripting.rst:10
#: ../../source/script/midi-tutorial.rst:12
msgid "On This Page"
msgstr "コンテンツ"

#: ../../source/script/get-started-with-scripting.rst:14
msgid "JavaScript Basics in Vircadia"
msgstr "VircadiaにおけるJavaScriptの基本"

#: ../../source/script/get-started-with-scripting.rst:16
msgid "Vircadia scripting runs on a JavaScript engine that is provided with Qt."
msgstr "Vircadiaスクリプトは、Qtで提供されるJavaScriptエンジンで実行されます。"

#: ../../source/script/get-started-with-scripting.rst:18
msgid ""
"Note that any functionality that runs around web pages (such as cookies, "
"local storages, or databases) does not work with 3D environments such as "
"Vircadia. For this reason, you cannot use JavaScript frameworks such as "
"Angular, React, Express, jQuery, Vue, etc."
msgstr ""
"Webページで実行される機能（Cookie、ローカルストレージ、データベースなど）は、Vircadiaなどの3D環境では機能しないことに注意してください。"
"このため、Angular、React、Express、jQuery、VueなどのJavaScriptフレームワークは使用できません。"

#: ../../source/script/get-started-with-scripting.rst:20
msgid "You are likely to interface most with these Vircadia APIs:"
msgstr "これらのVircadiaのAPIを最もよく使うことになるでしょう。"

#: ../../source/script/get-started-with-scripting.rst:23
msgid "API(s)"
msgstr "API"

#: ../../source/script/get-started-with-scripting.rst:23
#: ../../source/script/get-started-with-scripting.rst:56
#: ../../source/script/get-started-with-scripting.rst:102
msgid "Description"
msgstr "説明"

#: ../../source/script/get-started-with-scripting.rst:25
msgid "`Entities <https://apidocs.vircadia.dev/Entities.html>`_"
msgstr "`エンティティ <https://apidocs.vircadia.dev/Entities.html>`_"

#: ../../source/script/get-started-with-scripting.rst:25
msgid ""
"Lets you manipulate the entities around you, as long as you have "
"permissions to do so. This means you can add, remove, and edit entities. "
"Everyone has access to ``get`` properties of an entity, and can be used "
"to find Entities in range, direction, collision, or raytrace."
msgstr ""
"権限がある限り、周囲のエンティティを操作できます。これは、エンティティを追加、削除、および編集できることを意味します。誰もがエンティティの ``get`` プ"
"ロパティにアクセスでき、範囲、方向、衝突、またはレイトレースでエンティティを検索するために使用できます。"

#: ../../source/script/get-started-with-scripting.rst:32
msgid "`AvatarList <https://apidocs.vircadia.dev/AvatarList.html>`_"
msgstr " `アバターリスト <https://apidocs.vircadia.dev/AvatarList.html>`_ "

#: ../../source/script/get-started-with-scripting.rst:34
msgid "`AvatarManager <https://apidocs.vircadia.dev/AvatarManager.html>`_"
msgstr "`アバターマネージャ <https://apidocs.vircadia.dev/AvatarManager.html>`_"

#: ../../source/script/get-started-with-scripting.rst:36
msgid "`MyAvatar <https://apidocs.vircadia.dev/MyAvatar.html>`_"
msgstr "`私のアバター <https://apidocs.vircadia.dev/MyAvatar.html>`_"

#: ../../source/script/get-started-with-scripting.rst:32
msgid ""
"Lets you get information on an `Avatar "
"<https://apidocs.vircadia.dev/Avatar.html>`_, or manipulate your own "
"client-only `MyAvatar <https://apidocs.vircadia.dev/MyAvatar.html>`_. The"
" information here will be always the avatar information of the client "
"running the script. AvatarList and AvatarManager are basically the same."
msgstr ""
" `アバター <https://apidocs.vircadia.dev/Avatar.html>` に関する情報を取得したり、独自のクライアント専用の `"
"私のアバター <https://apidocs.vircadia.dev/MyAvatar.html>` を操作したりできます。ここでの情報は、常にスクリプ"
"トを実行しているクライアントのアバター情報になります。アバターリストとアバターマネージャは基本的に同じです。"

#: ../../source/script/get-started-with-scripting.rst:40
msgid "`Script <https://apidocs.vircadia.dev/Script.html>`_"
msgstr "`スクリプト <https://apidocs.vircadia.dev/Script.html>`_"

#: ../../source/script/get-started-with-scripting.rst:40
msgid ""
"Lets you to connect callbacks from your client to script, such as "
"functionality that is dependent on time (Script.update, Script.setTime, "
"Script.setInterval etc), connect paths relatively to Assets "
"(Script.relativePath), refer to other scripts (Script.include), or create"
" events which occur when the script is turned off (Script.scriptEnding)."
msgstr ""
"クライアントからスクリプトへのコールバックの接続、例えば時間に依存する機能（Script.update, Script.setTime, "
"Script.setInterval など）、アセットへの相対パス接続（Script.relativePath）、他のスクリプトへの参照（Script."
"include）、あるいはスクリプトが停止したときに発生するイベント（Script.scriptEnding）を可能にします。"

#: ../../source/script/get-started-with-scripting.rst:49
msgid ""
"There are `many other APIs available <https://apidocs.vircadia.dev>`_, "
"and we encourage you to make sure use of them as you become more "
"comfortable scripting in Vircadia."
msgstr ""
"`他にも多くのAPIがあります<https://apidocs.vircadia."
"dev>`。Vircadiaでのスクリプト作成に慣れてきたら、それらを確実に利用することをお勧めします。"

#: ../../source/script/get-started-with-scripting.rst:53
msgid "Types of Scripts"
msgstr "スクリプトの種類"

#: ../../source/script/get-started-with-scripting.rst:56
msgid "Script Type"
msgstr "スクリプトタイプ"

#: ../../source/script/get-started-with-scripting.rst:58
msgid "Interface Script"
msgstr "インターフェイススクリプト"

#: ../../source/script/get-started-with-scripting.rst:58
msgid ""
"*Interface scripts* run as long as you have Interface running. With these"
" scripts, you can perform one-time creation tasks or modify the user "
"experience with new menus, overlays, tweaks, plugins, and extensions."
msgstr ""
" *インターフェイススクリプト* は、インターフェイスが実行されている限り実行されます。これらのスクリプトを使用すると、1回限りの作成タスクを実行したり、新し"
"いメニュー、オーバーレイ、微調整、プラグイン、および拡張機能を使用してユーザーエクスペリエンスを変更したりできます。"

#: ../../source/script/get-started-with-scripting.rst:62
msgid "Assignment Client Script"
msgstr "割り当てクライアントスクリプト"

#: ../../source/script/get-started-with-scripting.rst:62
msgid ""
"*Assignment client scripts* coordinate the actions between entities and "
"avatars in your domain. These scripts continue to run even when you shut "
"down Interface."
msgstr ""
" *割り当てクライアントスクリプト* は、ドメイン内のエンティティとアバター間のアクションを調整します。これらのスクリプトは、インターフェイスをシャットダウン"
"しても実行され続けます。"

#: ../../source/script/get-started-with-scripting.rst:65
msgid "Avatar Script"
msgstr "アバタースクリプト"

#: ../../source/script/get-started-with-scripting.rst:65
msgid ""
"*Avatar scripts* run on an avatar and can give it unique effects, such as"
" flowing hair."
msgstr "*アバタースクリプト* はアバター上で実行され、なびく髪などのユニークな効果を与えることができます。"

#: ../../source/script/get-started-with-scripting.rst:68
msgid "Client Entity Script"
msgstr "クライアントエンティティスクリプト"

#: ../../source/script/get-started-with-scripting.rst:68
msgid ""
"*Client entity scripts* are scripts attached to entities that run locally"
" in response to a user in a domain. With these scripts, you can customize"
" what happens when a user encounters an entity."
msgstr ""
"*クライアントエンティティスクリプト* は、ドメイン内のユーザーに応答してローカルで実行される、エンティティに添付されたスクリプトです。これらのスクリプトを"
"使用すると、ユーザーがエンティティに遭遇したときの挙動をカスタマイズすることができます。"

#: ../../source/script/get-started-with-scripting.rst:72
msgid "Server Entity Script"
msgstr "サーバーエンティティスクリプト"

#: ../../source/script/get-started-with-scripting.rst:72
msgid ""
"*Server entity scripts* are scripts attached to entities that do not "
"require a user to trigger. These scripts control entities so that their "
"behavior is seen and heard by everyone in the domain."
msgstr ""
"*サーバーエンティティスクリプト* は、ユーザーがトリガーする必要のないエンティティに添付されたスクリプトです。これらのスクリプトは、ドメイン内のすべての人"
"はその動作が把握できるようにエンティティを制御します。"

#: ../../source/script/get-started-with-scripting.rst:79
msgid "Scripting Permissions"
msgstr "スクリプトのアクセス許可"

#: ../../source/script/get-started-with-scripting.rst:81
msgid ""
"Each domain owner has the ability to :doc:`restrict create and edit "
"permissions <../host/configure-settings/permission-settings>`. If the "
"script you want to run adds or edits entities and you don't have the "
"permission to do so, you won't see any objects created or changed. "
"However, you will still see the script listed in the Running Scripts "
"window."
msgstr ""
"各ドメインの所有者は、 :doc:`作成と編集の権限を制限 <../host/configure-settings/permission-settings>` すること"
"ができます。実行したいスクリプトがエンティティを追加または編集する権限を持っていない場合、オブジェクトが作成または変更される様子は表示されません。ただし、"
"Running Scripts ウィンドウにそのスクリプトが表示されます。"

#: ../../source/script/get-started-with-scripting.rst:85
msgid "Running Scripts Window"
msgstr "スクリプトウィンドウの実行"

#: ../../source/script/get-started-with-scripting.rst:87
msgid ""
"The Running Scripts window can be used to load, run and stop scripts from"
" a URL or from a disk drive. Vircadia also provides a number of sample "
"scripts for you to try out."
msgstr ""
"[スクリプトの実行]ウィンドウを使用して、URLまたはディスクドライブからスクリプトをロード、実行、および停止できます。Vircadiaには、試してみるた"
"めのサンプルスクリプトも多数用意されています。"

#: ../../source/script/get-started-with-scripting.rst:89
msgid ""
"To open the *Running Scripts* window, go to **Edit > Running Scripts** or"
" press ``Ctrl`` + ``J`` on your keyboard."
msgstr ""
"[Running Scripts]ウィンドウを開くには、**[Edit]> [Running Scripts]** に移動するか、キーボードの ``Ctrl`` + ``J`` を押します。"

#: ../../source/script/get-started-with-scripting.rst:93
msgid "Sample Scripts"
msgstr "サンプルスクリプト"

#: ../../source/script/get-started-with-scripting.rst:95
msgid ""
"Vircadia comes with a collection of scripts designed to improve your "
"experience as a user and provide tools for developing your own content. "
"We encourage you to look at these scripts as a resource to learn how to "
"code your own."
msgstr ""
"Vircadiaには、ユーザー体験を向上させ、独自のコンテンツを開発するためのツールを提供するために設計されたスクリプトのコレクションが付属しています。こ"
"れらのスクリプトは、あなた自身のコーディング方法を学ぶためのリソースとしてご覧いただくことをお勧めします。"

#: ../../source/script/get-started-with-scripting.rst:97
msgid ""
"Loading (or running) a script lets you test the functionality and see how"
" it behaves. If you want to view the actual code, you will need to open "
"the file in the text editor of your choice. In the 'Running Scripts' "
"window, click the 'Reveal Scripts' folder and browse to the JavaScript "
"file that you want to view."
msgstr ""
"スクリプトをロード（または実行）すると、動作確認や機能テストとして、その挙動を確認することができます。実際のコードを表示したい場合は、お好みのテキストエデ"
"ィターでファイルを開く必要があります。[Running Scripts]ウィンドウで、「Reveal "
"Scripts」フォルダをクリックし、表示したいJavaScriptファイルをブラウズしてください。"

#: ../../source/script/get-started-with-scripting.rst:99
msgid "These are the scripts we have available:"
msgstr "利用可能なスクリプトは次のとおりです。"

#: ../../source/script/get-started-with-scripting.rst:102
msgid "Scripts Folder"
msgstr "スクリプトフォルダ"

#: ../../source/script/get-started-with-scripting.rst:104
msgid "``android``"
msgstr "``Android``"

#: ../../source/script/get-started-with-scripting.rst:104
msgid "These scripts were built to run on Android devices."
msgstr "これらのスクリプトは、Androidデバイスで実行するために作成されました。"

#: ../../source/script/get-started-with-scripting.rst:106
msgid "``developer``"
msgstr "``開発者``"

#: ../../source/script/get-started-with-scripting.rst:106
msgid ""
"These scripts were created for internal use and debugging, but are "
"available as advanced developers may find them useful when creating "
"content. These scripts are not \"entry-level\" and are not guaranteed to "
"work or be documented."
msgstr ""
"これらのスクリプトは、内部使用とデバッグのために作成されましたが、上級開発者がコンテンツを作成する際に役立つと思われるため、公開しています。これらのスクリ"
"プトは「入門用」ではなく、動作やドキュメントを保証するものではありません。"

#: ../../source/script/get-started-with-scripting.rst:110
msgid "``modules``"
msgstr "``モジュール``"

#: ../../source/script/get-started-with-scripting.rst:110
msgid ""
"These scripts create external tools that simplify scripting in Vircadia. "
"For example, the AppUI module helps you create a tablet app, while the "
"Request module processes HTTP requests."
msgstr ""
"これらのスクリプトは Vircadia でのスクリプト作成を簡素化する外部ツールを作成する。例えば、AppUI "
"モジュールはタブレットアプリの作成を支援し、Request モジュールは HTTP リクエストを操作します。"

#: ../../source/script/get-started-with-scripting.rst:114
msgid "``system``"
msgstr "``システム``"

#: ../../source/script/get-started-with-scripting.rst:114
msgid ""
"These scripts are critical to the stability and usability of Vircadia. "
"Making changes to these scripts is not recommended, nor is it easy, as "
"you may need 'administrative' privileges."
msgstr ""
"これらのスクリプトはVircadiaの安定性と使いやすさに不可欠です。これらのスクリプトに変更を加えることは推奨されませんし、「管理者」権限が必要な場合も"
"あり、簡単ではありません。"

#: ../../source/script/get-started-with-scripting.rst:118
msgid "``tutorials``"
msgstr "``チュートリアル``"

#: ../../source/script/get-started-with-scripting.rst:118
msgid ""
"These scripts provide examples of what you can do using scripts in "
"Vircadia. Examples include: creating butterflies, making your avatar "
"clap, and adding ambient sound to your domain."
msgstr ""
"これらのスクリプトは、Vircadiaでスクリプトを使ってできることの例を示しています。例えば、蝶々を作ったり、アバターを拍手させたり、アンビエントサウン"
"ドをあなたのドメインに追加したりすることができます。"

#: ../../source/script/get-started-with-scripting.rst:125
msgid "Load and Run a Script"
msgstr "スクリプトのロードと実行"

#: ../../source/script/get-started-with-scripting.rst:127
msgid "To run a script:"
msgstr "スクリプトを実行するには："

#: ../../source/script/get-started-with-scripting.rst:129
msgid "Open the 'Running Scripts' window."
msgstr "[スクリプトの実行]ウィンドウを開きます。"

#: ../../source/script/get-started-with-scripting.rst:130
#: ../../source/script/interface-scripts.md:15
msgid ""
"For scripts hosted in the cloud, click 'From URL'. Enter the URL of your "
"script file and click 'OK'."
msgstr "クラウドでホストされているスクリプトの場合は、[URLから]をクリックします。スクリプトファイルのURLを入力し、[OK]をクリックします。"

#: ../../source/script/get-started-with-scripting.rst:131
#: ../../source/script/interface-scripts.md:16
msgid ""
"For scripts on your local computer, click 'From Disk'. Browse to your "
"script file and click 'Open'."
msgstr "ローカルコンピュータのスクリプトについては、[ディスクから]をクリックします。スクリプトファイルを参照し、[開く]をクリックします。"

#: ../../source/script/get-started-with-scripting.rst:132
msgid ""
"To load a sample script, browse to the script at the bottom of the "
"'Running Scripts' window."
msgstr "サンプルスクリプトをロードするには、[スクリプトの実行]ウィンドウの下部にあるスクリプトを参照します。"

#: ../../source/script/get-started-with-scripting.rst:136
msgid "Reload or Stop a Script"
msgstr "スクリプトのリロードと停止"

#: ../../source/script/get-started-with-scripting.rst:138
msgid ""
"To reload or stop a script, open the 'Running Scripts' window and do one "
"of the following:"
msgstr "スクリプトをリロードまたは停止するには、[スクリプトの実行]ウィンドウを開き、次のいずれかを実行します。"

#: ../../source/script/get-started-with-scripting.rst:140
msgid ""
"To reload all running scripts, click the 'Reload All' button at the top "
"of the 'Running Scripts' window."
msgstr "実行中のすべてのスクリプトを再ロードするには、[実行中のスクリプト]ウィンドウの上部にある[すべて再ロード]ボタンをクリックします。"

#: ../../source/script/get-started-with-scripting.rst:141
msgid "To reload a specific script, click the circular arrow next to the script."
msgstr "特定のスクリプトを再ロードするには、スクリプトの横にある円形の矢印をクリックします。"

#: ../../source/script/get-started-with-scripting.rst:142
msgid ""
"To stop all running scripts, click the 'Stop All' button at the top of "
"the 'Running Scripts' window."
msgstr "実行中のすべてのスクリプトを停止するには、[実行中のスクリプト]ウィンドウの上部にある[すべて停止]ボタンをクリックします。"

#: ../../source/script/get-started-with-scripting.rst:143
msgid "To stop a specific script, click the 'X' next to the script."
msgstr "特定のスクリプトを停止するには、スクリプトの横にある[X]をクリックします。"

#: ../../source/script/get-started-with-scripting.rst:147
msgid "Add a Script to the Default Scripts"
msgstr "デフォルトのスクリプトにスクリプトを追加する"

#: ../../source/script/get-started-with-scripting.rst:149
msgid ""
"You can add a script to the default scripts to run every time you start "
"Interface."
msgstr "デフォルトのスクリプトにスクリプトを追加して、インターフェイスを起動するたびに実行することができます。"

#: ../../source/script/get-started-with-scripting.rst:151
msgid ""
"In Interface, pull up your Tablet or HUD and go to **Menu > Edit > "
"Running Scripts**."
msgstr "インターフェイスで、タブレットまたはHUDをプルアップし、**[メニュー]>[編集]>[スクリプトの実行]** に移動します。"

#: ../../source/script/get-started-with-scripting.rst:152
msgid "Click 'Reveal Scripts Folder' at the bottom."
msgstr "下部にある[RevealScriptsFolder]をクリックします。"

#: ../../source/script/get-started-with-scripting.rst:153
msgid "In the file explorer window, open the 'defaultScripts.js' file."
msgstr "ファイルエクスプローラウィンドウで、[defaultScripts.js]ファイルを開きます。"

#: ../../source/script/get-started-with-scripting.rst:154
msgid ""
"Add your script to this file to make it run with other default scripts. "
"Ensure the folder path to your script is correct."
msgstr ""
"このファイルにあなたのスクリプトを追加して、他のデフォルトスクリプトと一緒に実行できるようにします。スクリプトのフォルダパスが正しいことを確認してください"
"。"

#: ../../source/script/get-started-with-scripting.rst:156
msgid ""
"The 'defaultScripts.js' file is updated every time you update Interface "
"to the latest release version. This means that any changes you make to "
"the file will be overwritten. You can avoid this by writing and running a"
" 'loader' script to load scripts on start up."
msgstr ""
"[defaultScripts.js]ファイルは、インターフェイスを最新のリリースバージョンに更新するたびに更新されます。これは、ファイルに加えた変更がす"
"べて上書きされることを意味します。これを回避するには、[ローダー]スクリプトを記述して実行し、起動時にスクリプトをロードします。"

#: ../../source/script/get-started-with-scripting.rst:160
msgid "Scripting Console"
msgstr "スクリプトコンソール"

#: ../../source/script/get-started-with-scripting.rst:162
msgid ""
"The Scripting Console lets you test and run short script snippets quickly"
" in Vircadia to see how they work. To open the console, go to the "
"'Developer menu', then **Scripting > Console**. If the 'Developer' menu "
"is not visible, first go to the 'Settings' menu and click 'Developer' "
"Menu."
msgstr ""
"スクリプトコンソールを使用すると、Vircadiaで短いスクリプトスニペットをすばやくテストして実行し、それらがどのように機能するかを確認できます。コンソ"
"ールを開くには、[開発者]メニューに移動し、**[スクリプト]>[コンソール]** に移動します。[開発者]メニューが表示されていない場合は、最初に[設定]"
"メニューに移動し、[開発者]メニューをクリックします。"

#: ../../source/script/get-started-with-scripting.rst:168
msgid "Debug Window"
msgstr "デバッグ画面"

#: ../../source/script/get-started-with-scripting.rst:170
msgid ""
"The Debug Window shows the output generated by your running scripts. This"
" lets you watch the script(s) in action and make sure that it is running "
"as you intended. If the script fails, the debugger can help you identify "
"what went wrong, and point you to specific lines of code where the error "
"occurred. To open the Debug Window, go to the 'Developer' menu, then "
"**Scripting > Script Log** (HMD Friendly). If the Developer menu is not "
"visible, first go to the 'Settings' menu and click 'Developer' Menu."
msgstr ""
"デバッグウィンドウには、実行中のスクリプトによって生成された出力が表示されます。これにより、スクリプトの動作を監視し、スクリプトが意図したとおりに実行され"
"ていることを確認できます。スクリプトが失敗した場合、デバッガーは何が問題だったかを特定し、エラーが発生した特定のコード行を示すのに役立ちます。デバッグウィ"
"ンドウを開くには、[開発者]メニューに移動し、**[スクリプト]> [スクリプトログ]** （HMD対応）に移動します。開発者メニューが表示されていない場合"
"は、最初に[設定]メニューに移動し、[開発者]メニューをクリックします。"

#: ../../source/script/get-started-with-scripting.rst:176
msgid ":doc:`Interface Scripts <interface-scripts>`"
msgstr ":doc:`インターフェイススクリプト <interface-scripts>`"

#: ../../source/script/get-started-with-scripting.rst:177
msgid ":doc:`Assignment Client Scripts <assignment-client-scripts>`"
msgstr ":doc:`割り当てクライアントスクリプト <assignment-client-scripts>`"

#: ../../source/script/get-started-with-scripting.rst:178
msgid ":doc:`Avatar Scripts <avatar-scripts>`"
msgstr ":doc:`アバタースクリプト <avatar-scripts>`"

#: ../../source/script/get-started-with-scripting.rst:179
msgid ":doc:`Client Entity Scripts <client-entity-scripts>`"
msgstr ":doc:`クライアントエンティティスクリプト <client-entity-scripts>`"

#: ../../source/script/get-started-with-scripting.rst:180
msgid ":doc:`Server Entity Scripts <server-entity-scripts>`"
msgstr ":doc:`サーバーエンティティスクリプト <server-entity-scripts>`"

#: ../../source/script/get-started-with-scripting.rst:181
msgid ":doc:`Write Your Own Scripts <write-scripts>`"
msgstr ":doc:`独自のスクリプトを作成する <write-scripts>`"

#: ../../source/script/interface-scripts.md:3
msgid ""
"Interface scripts run on your local machine, as long as you have "
"Interface up and running. Each user has full control over when interface "
"scripts are started and stopped. The results (such as when your script "
"changes the color of a box) can be seen by everyone in your domain, but "
"the script itself is running on your local machine. Your Interface will "
"communicate that information to the Entity Server, which will communicate"
" it to whoever is visiting the domain."
msgstr ""
"Interfaceスクリプトは、Interfaceが起動している限り、あなたのローカルマシン上で実行されます。各ユーザーは、インターフェイススクリプトの開"
"始と停止を完全に制御することができます。結果（スクリプトがボックスの色を変更した場合など）はドメイン内の全員が見ることができますが、スクリプト自体はあなた"
"のローカルマシンで実行されます。あなたのInterfaceはその情報をEntity Serverに伝え、Entity "
"Serverはドメインを訪れている人にその情報を伝達します。"

#: ../../source/script/interface-scripts.md:5
msgid ""
"With interface scripts, you can do things like add new menus to the "
"Interface, add plug-ins, or add 3D overlays that you have control over."
msgstr ""
"インターフェーススクリプトを使うと、インターフェースに新しいメニューを追加したり、プラグインを追加したり、3Dオーバーレイを追加したりと、自分でコントロー"
"ルすることができます。"

#: ../../source/script/interface-scripts.md:8
msgid "[Load an Interface Script](#load-an-interface-script)"
msgstr "[インターフェイススクリプトをロードする](#load-an-interface-script)"

#: ../../source/script/interface-scripts.md:9
msgid "[Example of an Interface Script](#example-of-an-interface-script)"
msgstr "[インターフェイススクリプトの例](#example-of-an-interface-script)"

#: ../../source/script/interface-scripts.md:11
msgid "Load an Interface Script"
msgstr "インターフェイススクリプトのロード"

#: ../../source/script/interface-scripts.md:13
msgid "To load and run an interface script:"
msgstr "インターフェイススクリプトをロードして実行するには："

#: ../../source/script/interface-scripts.md:14
msgid ""
"In Interface, go to **Edit > Running Scripts** or press <kbd "
"class=\"keyboard\">Ctrl</kbd> + <kbd class=\"keyboard\">J</kbd> on your "
"keyboard."
msgstr ""
"インターフェイスで、**[編集]>[スクリプトの実行]**に移動するか、キーボードから <kbd class=\"keyboard\">Ctrl</"
"kbd> + <kbd class=\"keyboard\">J</kbd>を押します。"

#: ../../source/script/interface-scripts.md:18
msgid "Example of an Interface Script"
msgstr "インターフェイススクリプトの例"

#: ../../source/script/interface-scripts.md:20
msgid ""
"The following script automatically enters a first person perspective when"
" you enter VR mode with a HMD."
msgstr "次のスクリプトは、HMDでVRモードに入ると、自動的に一人称視点になります。"

#: ../../source/script/js-tips.md:1
msgid "JavaScript Tips & Tricks"
msgstr "JavaScriptのヒントとコツ"

#: ../../source/script/js-tips.md:3
msgid ""
"Vircadia's robust [JavaScript API](https://apidocs.vircadia.dev) provides"
" the tools for you to build great content and user experiences in VR. "
"We've compiled some advanced JavaScript tips you can use while scripting "
"for Vircadia."
msgstr ""
"Vircadiaの堅牢な[JavaScriptAPI](https://apidocs.vircadia.dev)は、VRで優れたコンテンツとユーザーエク"
"スペリエンスを構築するためのツールを提供します。Vircadiaのスクリプト作成中に使用できる高度なJavaScriptのヒントをいくつかまとめました。"

#: ../../source/script/js-tips.md:5
msgid ""
"You can use the [Scripting Console in Interface](get-started-with-"
"scripting.html#scripting-console) to try out the examples on this page. "
"The output will be visible in the console itself."
msgstr ""
"[インターフェイスのスクリプトコンソール](get-started-with-scripting.html#scripting-"
"console)を使用して、このページの例を試すことができます。出力はコンソール上に表示されます。"

#: ../../source/script/js-tips.md:7 ../../source/script/write-scripts.md:12
msgid "**On This Page:**"
msgstr "**コンテンツ**"

#: ../../source/script/js-tips.md:9
msgid "[Compute 3D Math Operations](#compute-3d-math-operations)"
msgstr "[3次元数学演算の計算](#compute-3d-math-operations)"

#: ../../source/script/js-tips.md:10
msgid "[Get Your Avatar's Position](#get-your-avatars-position)"
msgstr "[アバターの位置を取得](#get-your-avatars-position)"

#: ../../source/script/js-tips.md:11
msgid "[Get Your Avatar's Orientation](#get-your-avatars-orientation)"
msgstr "[アバターの向きを取得](#get-your-avatars-orientation)"

#: ../../source/script/js-tips.md:12
msgid ""
"[Get the Direction Your Avatar is Facing](#get-the-direction-your-avatar-"
"is-facing)"
msgstr "[アバターの向きの取得](#get-the-direction-your-avatar-is-facing)"

#: ../../source/script/js-tips.md:13
msgid ""
"[Make an Entity Appear Before Your Avatar](#make-an-entity-appear-before-"
"your-avatar)"
msgstr "[アバターの前のエンティティ表示](#make-an-entity-appear-before-your-avatar)"

#: ../../source/script/js-tips.md:14
msgid "[Include External JS and JSON Files](#include-external-js-and-json-files)"
msgstr "[外部JS、JSONファイルのインクルード](#include-external-js-and-json-files)"

#: ../../source/script/js-tips.md:15
msgid "[Equip an Item](#equip-an-item)"
msgstr "[アイテムの装備](#equip-an-item)"

#: ../../source/script/js-tips.md:16
msgid "[Connect a Signal to a Function](#connect-a-signal-to-a-function)"
msgstr "[シグナルと機能の接続](#connect-a-signal-to-a-function)"

#: ../../source/script/js-tips.md:18
msgid "Compute 3D Math Operations"
msgstr "3次元数学演算の計算"

#: ../../source/script/js-tips.md:20
msgid ""
"When you script for VR worlds like Vircadia, you need 3D math operations "
"to compute the position and orientation of 3D objects and avatars in-"
"world. We cannot simply add two vectors. To script 3D math operations and"
" to determine position and orientation information of avatars, you can "
"use the following namespaces in our JavaScript API:"
msgstr ""
"VircadiaのようなVRワールドでスクリプトを書く場合、インワールドの3Dオブジェクトやアバターの位置や向きを計算するために、3Dの数学演算が必要にな"
"ります。単純に2つのベクトルを足すだけでは不十分です。3D数学演算のスクリプトや、アバターの位置や向きの情報を求めるには、JavaScript API "
"の以下の名前空間を利用できます。"

#: ../../source/script/js-tips.md:22
msgid ""
"[Vec3](https://apidocs.vircadia.dev/Vec3.html): The Vec3 API has "
"facilities for generating and manipulating 3-dimensional vectors."
msgstr ""
"[Vec3](https://apidocs.vircadia.dev/Vec3.html):Vec3 "
"APIには、3次元ベクトルを生成および操作するための機能があります。"

#: ../../source/script/js-tips.md:23
msgid ""
"[Quat](https://apidocs.vircadia.dev/Quat.html): The Quat API provides "
"facilities for generating and manipulating quaternions."
msgstr ""
"[Quat](https://apidocs.vircadia.dev/Quat.html): Quat "
"APIは、四元数を生成・操作するための機能を提供します。"

#: ../../source/script/js-tips.md:24
msgid ""
"[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.html): The MyAvatar API "
"provides facilities for manipulating avatars."
msgstr ""
"[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.html): MyAvatar "
"APIは、アバターを操作するための機能を提供します。"

#: ../../source/script/js-tips.md:26
msgid "Get Your Avatar's Position"
msgstr "アバターの位置を取得する"

#: ../../source/script/js-tips.md:28
msgid ""
"When creating objects in world, it's often very helpful to know where "
"your avatar currently is."
msgstr "Vircadia世界でオブジェクトを作成するとき、アバターが現在どこにあるかを知ることはしばしば非常に役に立ちます。"

#: ../../source/script/js-tips.md:30
msgid ""
"Vircadia uses a 3D Cartesian coordinate system where the position vector "
"of an entity or avatar looks like this:"
msgstr "Vircadiaは3次元直交座標系を使用しており、エンティティやアバターの位置ベクトルはこのようになります。"

#: ../../source/script/js-tips.md:36
msgid ""
"To get your avatar's current position, use the "
"[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.html) namespace. "
"MyAvatar contains properties with information related to your avatar. Use"
" the position property, `MyAvatar.position`, which returns an object."
msgstr ""
"アバターの現在の位置を取得するには、名前空間を使用[MyAvatar](https://apidocs.vircadia.dev/MyAvatar.htm"
"l)します。MyAvatarには、アバターに関連する情報を含むプロパティが含まれています。オブジェクトを返すpositionプロパティ`MyAvatar."
"position`を使用します。"

#: ../../source/script/js-tips.md:38
msgid ""
"In the following example, we are using the JSON.stringify method to "
"convert the JavaScript object (returned by `MyAvatar.position`) to a data"
" string that can be sent over the server."
msgstr ""
"次の例では、JSON.stringifyメソッドを使用して、JavaScriptオブジェクト( `MyAvatar."
"position`によって返される)をサーバー経由で送信できるデータ文字列に変換しています。"

#: ../../source/script/js-tips.md:40
msgid "Open your Scripting Console and find your avatar's position."
msgstr "スクリプトコンソールを開き、アバターの位置を見つけます。"

#: ../../source/script/js-tips.md:47
msgid "Get Your Avatar's Orientation"
msgstr "アバターの向きを取得する"

#: ../../source/script/js-tips.md:49
msgid ""
"If you want an object to appear in front of you, you need to know how "
"your avatar is currently oriented in-world."
msgstr "物体を目の前に表示させるには、自分のアバターが現在どのような向きでインワールドにいるか知る必要があります。"

#: ../../source/script/js-tips.md:51
msgid ""
"Rotations are handled are by a number-system called Quaternions. "
"Quaternions help simplify calculations in three dimensional space. They "
"add an extra dimension of 'w' and the values are normalized (-1,1)."
msgstr ""
"回転は、クォータニオンと呼ばれる数体系で処理されます。四元数とは、3次元空間での計算を簡単にするためのものです。四元数では、[w]という次元が追加され、値"
"は(-1,1)に正規化されます。"

#: ../../source/script/js-tips.md:53
msgid "Quaternions are represented in the form:"
msgstr "クォータニオンは次の形式で表されます。"

#: ../../source/script/js-tips.md:59
msgid ""
"Get your avatar's orientation in the Scripting Console by using the "
"`MyAvatar.orientation` property:"
msgstr "`MyAvatar.orientation`プロパティを使用して、スクリプトコンソールでアバターの向きを取得します。"

#: ../../source/script/js-tips.md:66
msgid "Get the Direction Your Avatar is Facing"
msgstr "アバターが向いている方向を取得する"

#: ../../source/script/js-tips.md:68
msgid ""
"You can use the [Quat](https://apidocs.vircadia.dev/Quat.html) namespace "
"to get the direction which your avatar is facing. Pass your avatar's "
"orientation to `Quat.getForward` to get a vector describing which "
"direction you are facing on the world axis."
msgstr ""
"[Quat](https://apidocs.vircadia.dev/Quat.html) "
"名前空間を使って、アバターが向いている方向を取得することができます。アバターの向きを `Quat.getForward` "
"に渡すと、世界軸のどの方向に向いているかを表すベクトルを得ることができます。"

#: ../../source/script/js-tips.md:77
msgid "Make an Entity Appear Before Your Avatar"
msgstr "アバターの前にエンティティを表示させる"

#: ../../source/script/js-tips.md:79
msgid ""
"You can make an entity appear before your avatar and also control the "
"distance at which it appears."
msgstr "エンティティをアバターの前に表示させたり、表示される距離を制御したりできます。"

#: ../../source/script/js-tips.md:81
msgid ""
"Use the [Vec3](https://apidocs.vircadia.dev/Vec3.html) namespace and the "
"direction your avatar is facing to return the position at which you can "
"make your entity appear. This position is 1m away from your avatar."
msgstr ""
"[Vec3](https://apidocs.vircadia.dev/Vec3."
"html)名前空間とアバターが向いている方向を使用して、エンティティを表示できる位置を返します。この位置はアバターから1m離れています。"

#: ../../source/script/js-tips.md:87
msgid ""
"You can also control the distance at which an entity appears rather than "
"using the default distance of 1m. First, multiply the vector representing"
" the direction your avatar is facing and the distance."
msgstr ""
"また、エンティティを表示する際の距離をデフォルトの1mではなく、コントロールすることができます。まず、アバターが向いている方向と距離を表すベクトルを掛け合"
"わせます。"

#: ../../source/script/js-tips.md:93
msgid ""
"Use `Vec3.sum` to return a new vector representing how far away an entity"
" will appear from your avatar."
msgstr "`Vec3.sum`を使用して、エンティティがアバターからどれだけ離れているかを表す新しいベクトルを返します。"

#: ../../source/script/js-tips.md:99
msgid ""
"We've included the above operations in a function below for you to save "
"and run as a script."
msgstr "上記の操作を以下の関数にまとめましたので、スクリプトとして保存し、実行してください。"

#: ../../source/script/js-tips.md:123
msgid "Include External JS and JSON Files"
msgstr "外部JSおよびJSONファイルを含める"

#: ../../source/script/js-tips.md:125
msgid ""
"When writing a script in Vircadia, you might need to access the methods "
"or objects in an external JS file or get information from a JSON file. "
"For example, if you're writing a script to make your avatar wave, you "
"might need to use some methods that already exist in an external JS file."
" You can do this using the `require` method in the Scripts namespace of "
"our API."
msgstr ""
"Vircadiaでスクリプトを書くとき、外部のJSファイルにあるメソッドやオブジェクトにアクセスしたり、JSONファイルから情報を取得する必要がある場合が"
"あります。例えば、アバターを振るスクリプトを書く場合、外部のJSファイルにすでに存在するいくつかのメソッドを使用する必要があるかもしれません。このような場"
"合は、API の Scripts ネームスペースにある `require` メソッドを使用します。"

#: ../../source/script/js-tips.md:127
msgid ""
"Any script that you try to retrieve using this method must export either "
"a function or an object. Let's try this using an example."
msgstr ""
"このメソッドを使って取得しようとするスクリプトは、関数かオブジェクトのどちらかをエクスポートする必要があります。例として、これを試してみましょう。"

#: ../../source/script/js-tips.md:129
msgid "Create a JS script that you want to access from your main script."
msgstr "メインスクリプトからアクセスするJSスクリプトを作成します。"

#: ../../source/script/js-tips.md:131
msgid "**example.js**"
msgstr "**example.js**"

#: ../../source/script/js-tips.md:144
msgid ""
"In **example.js**, you are exporting two functions that print either "
"Hello or Goodbye, depending on which function you call, to the console. "
"Now, let's use `require` in your main script."
msgstr ""
"** example.js **では、呼び出す関数に応じて、HelloまたはGoodbyeのいずれかを出力する2つの関数をコンソールにエクスポートしていま"
"す。それでは、メインスクリプトで`require`を使用しましょう。"

#: ../../source/script/js-tips.md:146
msgid "Create a JS script called **main.js**."
msgstr "**main.js**というJSスクリプトを作成します。"

#: ../../source/script/js-tips.md:153
msgid ""
"When you use the `require` method, you are making any function or object "
"exported from **example.js** available to **main.js**. This means that "
"**main.js** now has access to functions that will print either Hello or "
"Goodbye to the console. In the above example, we are printing Hello to "
"the console when we run **main.js**."
msgstr ""
"`require`メソッドを使用すると、**example.js**からエクスポートされた関数またはオブジェクトを**main."
"js**で使用できるようになります。これは、** main.js "
"**が、HelloまたはGoodbyeをコンソールに出力する関数にアクセスできるようになったことを意味します。上記の例では、** main.js "
"**を実行すると、コンソールにHelloが出力されます。"

#: ../../source/script/js-tips.md:160
msgid "Equip an Item"
msgstr "アイテムの装備"

#: ../../source/script/js-tips.md:161
msgid ""
"You can equip an item by grabbing and holding an entity without pressing "
"the grab button or trigger continuously. For example, you could equip a "
"paint brush to your avatar's hand and drop it only when you're done "
"painting."
msgstr ""
"グラブボタンやトリガーを連続して押さなくても、エンティティをつかんで保持することでアイテムを装備できます。たとえば、アバターの手にペイントブラシを装備し、"
"ペイントが完了したときにのみドロップすることができます。"

#: ../../source/script/js-tips.md:163
msgid "You can equip an item using a script:"
msgstr "スクリプトを使用してアイテムを装備できます。"

#: ../../source/script/js-tips.md:169
msgid "To drop the entity from your avatar's hand:"
msgstr "アバターの手からエンティティをドロップするには："

#: ../../source/script/js-tips.md:174
msgid "Connect a Signal to a Function"
msgstr "シグナルを関数に接続する"

#: ../../source/script/js-tips.md:176
msgid ""
"Signals can be connected to functions. This means that every time a "
"signal is triggered, a function is executed. For example, if your avatar "
"changes when collisions are enabled or disabled, you can connect a "
"function to react to this specific event such as:"
msgstr ""
"シグナルは関数に接続することができます。これは、シグナルがトリガーされるたびに関数が実行されることを意味します。例えば、衝突が有効または無効になったときに"
"アバターが変化する場合、この特定のイベントに反応するように次のような関数を接続することができます。"

#: ../../source/script/js-tips.md:189
msgid ""
"Each signal usually gets passed in arguments, and you can refer to the "
"[API documentation](https://apidocs.vircadia.dev/MyAvatar.html) to see "
"what a signal will provide you, such as the enabled property passed into "
"collision changed."
msgstr ""
"通常、各シグナルは引数で渡されます。[APIドキュメント](https://apidocs.vircadia.dev/MyAvatar."
"html)を参照して、衝突に渡された有効なプロパティなど、シグナルが提供するものを確認できます。"

#: ../../source/script/js-tips.md:191
msgid ""
"It's good practice to disconnect from signals, but you can only do that "
"if you name your function."
msgstr "シグナルから切断することをお勧めしますが、関数に名前を付けた場合にのみ切断できます。"

#: ../../source/script/midi-tutorial.rst:5
msgid ""
"MIDI (Musical Instrument Digital Interface) is a protocol (with "
"electrical connectors and a digital interface) that allows digital tools "
"and electronic devices (virtual and physical) to communicate with each "
"other. MIDI is usually used as a music sequencer. Originally, this format"
" was created in the 80s as a way for instruments to communicate with each"
" other, but over the last 30 years, it has evolved into a highly "
"organized specification that is heavily tested and adopted for a "
"multitude of purposes."
msgstr ""
"MIDI (Musical Instrument Digital Interface) は、デジタルツールと電子機器（仮想および物理）が相互に通信するため"
"のプロトコル（電気コネクタとデジタルインターフェース）です。MIDIは通常、音楽シーケンサーとして使用されます。元々、このフォーマットは楽器同士が通信する"
"方法として80年代に作られましたが、この30年の間に高度に組織化された仕様に進化し、多くの目的でテストされ採用されています。"

#: ../../source/script/midi-tutorial.rst:7
msgid ""
"We created a MIDI class (with the help of one of our community members, "
"Brainstormer) that can be used to control your environment in Vircadia. "
"For example, we used MIDI to control lighting in a domain for a music "
"show."
msgstr ""
"私たちは、Vircadiaで環境を制御するために使用できるMIDIクラスを（コミュニティメンバーの一人であるBrainstormerの助けを借りて）作りま"
"した。例えば、音楽番組のドメイン内の照明を制御するためにMIDIを使いました。"

#: ../../source/script/midi-tutorial.rst:9
msgid "Currently, we support the MIDI class only on Windows."
msgstr "現在、MIDIクラスはWindowsでのみサポートされています。"

#: ../../source/script/midi-tutorial.rst:16
msgid "MIDI Class Basics"
msgstr "MIDIクラスの基本"

#: ../../source/script/midi-tutorial.rst:18
msgid ""
"Our MIDI class works by passing a DWORD (double word), a data type "
"specific to Microsoft Windows, as a message. It is an unsigned 32-bit "
"unit of data and can contain an integer value ranging from ``0`` to "
"``4,294,967,295``."
msgstr ""
"私たちのMIDIクラスは、Microsoft Windowsに固有のデータ型であるDWORD（ダブルワード）をメッセージとして渡すことによって機能します。"
"これは符号なし32ビットのデータ単位であり、``0`` から``4,294,967,295`` の範囲の整数値を含めることができます。"

#: ../../source/script/midi-tutorial.rst:20
msgid ""
"Every time you move a lever, rotate a knob, press/release a key, or push "
"down a pad, you are creating a MIDI message that says what channel, what "
"note, what velocity, and what is the status/command to run."
msgstr ""
"レバーを動かしたり、ノブを回したり、キーを押したり離したり、パッドを押し下げたりするたびに、実行するチャンネル、ノート、ベロシティ、ステータス/コマンドを"
"示すMIDIメッセージが作成されます。"

#: ../../source/script/midi-tutorial.rst:22
msgid "Each byte in this message describes a different type's value."
msgstr "このメッセージの各バイトは、異なるタイプの値を示しています。"

#: ../../source/script/midi-tutorial.rst:25
msgid "00000000"
msgstr "00000000"

#: ../../source/script/midi-tutorial.rst:25
msgid "0vvvvvvv"
msgstr "0vvvvvvv"

#: ../../source/script/midi-tutorial.rst:25
msgid "0nnnnnnn"
msgstr "0nnnnnnn"

#: ../../source/script/midi-tutorial.rst:25
msgid "1sss"
msgstr "1sss"

#: ../../source/script/midi-tutorial.rst:25
msgid "cccc"
msgstr "cccc"

#: ../../source/script/midi-tutorial.rst:28
msgid "Where:"
msgstr "どこ:"

#: ../../source/script/midi-tutorial.rst:30
msgid "v = velocity"
msgstr "v=速度"

#: ../../source/script/midi-tutorial.rst:31
msgid "n = notes"
msgstr "n=メモ"

#: ../../source/script/midi-tutorial.rst:32
msgid "s = status"
msgstr "s=ステータス"

#: ../../source/script/midi-tutorial.rst:33
msgid "c = channel"
msgstr "c=チャネル"

#: ../../source/script/midi-tutorial.rst:35
msgid ""
"The number in the higher order bit (the first number) denotes whether it "
"is a command (1) or data (0). The rest of the numbers determine the value"
" of the type. This means that the velocity and note can represent 128 "
"unique values (1+2+4+8+16+32+64), status can represent 8 unique values, "
"and channel can represent 16 values."
msgstr ""
"上位ビットの数字（最初の数字）は、コマンド（1）かデータ（0）かを示します。残りの数値は、タイプの値を決定します。つまり、ベロシティとノートは128の一意"
"の値（1 + 2 + 4 + 8 + 16 + 32 + 64）を表し、ステータスは8つの一意の値を表し、チャネルは16の値を表すことができます。"

#: ../../source/script/midi-tutorial.rst:37
msgid "The different status types we support are:"
msgstr "サポートされているさまざまなステータスタイプは次のとおりです。"

#: ../../source/script/midi-tutorial.rst:40
msgid "Status"
msgstr "状態"

#: ../../source/script/midi-tutorial.rst:40
msgid "Types"
msgstr "タイプ"

#: ../../source/script/midi-tutorial.rst:42
msgid "08"
msgstr "08"

#: ../../source/script/midi-tutorial.rst:42
msgid "note off"
msgstr "書き留める"

#: ../../source/script/midi-tutorial.rst:44
msgid "09"
msgstr "09"

#: ../../source/script/midi-tutorial.rst:44
msgid "note on"
msgstr "注意"

#: ../../source/script/midi-tutorial.rst:46
msgid "10"
msgstr "10"

#: ../../source/script/midi-tutorial.rst:46
msgid "polyphonic key pressure"
msgstr "ポリフォニックキープレッシャー"

#: ../../source/script/midi-tutorial.rst:48
msgid "11"
msgstr "11"

#: ../../source/script/midi-tutorial.rst:48
msgid "control change"
msgstr "コントロールの変更"

#: ../../source/script/midi-tutorial.rst:50
msgid "12"
msgstr "12"

#: ../../source/script/midi-tutorial.rst:50
msgid "program change"
msgstr "プログラムの変更"

#: ../../source/script/midi-tutorial.rst:52
msgid "13"
msgstr "13"

#: ../../source/script/midi-tutorial.rst:52
msgid "channel pressure"
msgstr "チャネルプレッシャー"

#: ../../source/script/midi-tutorial.rst:54
msgid "14"
msgstr "14"

#: ../../source/script/midi-tutorial.rst:54
msgid "pitch bend"
msgstr "ピッチベンド"

#: ../../source/script/midi-tutorial.rst:56
msgid "15"
msgstr "15"

#: ../../source/script/midi-tutorial.rst:56
msgid "system message"
msgstr "システムメッセージ"

#: ../../source/script/midi-tutorial.rst:61
msgid "Connect Your Controller Device"
msgstr "コントローラデバイスを接続する"

#: ../../source/script/midi-tutorial.rst:63
msgid ""
"You can either connect a real controller device that you use to control "
"your environment in Vircadia, or create a virtual one that will help you "
"connect to other virtual devices."
msgstr ""
"Vircadiaで環境を制御するために使用する実際のコントローラーデバイスを接続するか、他の仮想デバイスとの接続を補助する仮想のものを作成することができま"
"す。"

#: ../../source/script/midi-tutorial.rst:67
msgid "Connect Ableton Live to Interface"
msgstr "Ableton Liveとインターフェイスを接続する"

#: ../../source/script/midi-tutorial.rst:69
msgid ""
"To `connect Ableton Live <https://help.ableton.com/hc/en-"
"us/articles/209774225-Using-virtual-MIDI-buses>`_ directly to Vircadia’s "
"Interface client, we recommend the following virtual tools:"
msgstr ""
"`Ableton Live <https://help.ableton.com/hc/en-us/articles/209774225-Using-"
"virtual-MIDI-buses>` _をVircadiaのインターフェイスクライアントに直接接続するには、次の仮想ツールをお勧めします。"

#: ../../source/script/midi-tutorial.rst:71
msgid ""
"`loopMIDI <https://www.tobias-erichsen.de/software/loopmidi.html>`_: This"
" will create a virtual in/out port to send information into and out of "
"HiFi"
msgstr ""
"`loopMIDI <https://www.tobias-erichsen.de/software/loopmidi.html>` _："
"loopMIDI より、HiFiとの間で情報を送受信するための仮想入力/出力ポートが作成されます"

#: ../../source/script/midi-tutorial.rst:72
msgid ""
"`VMP <http://vmpk.sourceforge.net>`_: You can use this to simulate keys "
"being pressed or sliders/knobs being manipulated if you do not have a "
"controller."
msgstr ""
"`VMP <http://vmpk.sourceforge.net>` "
"_：これを使用して、コントローラーがない場合に、押されているキーや操作されているスライダー/ノブをシミュレートできます。"

#: ../../source/script/midi-tutorial.rst:76
msgid "Connect an iPad or iPhone to Interface"
msgstr "iPadまたはiPhoneをインターフェースに接続する"

#: ../../source/script/midi-tutorial.rst:78
msgid ""
"You can use your iPad or iPhone as a touch screen controller with "
"buttons, knobs, and sliders. Read the sections `Configure Your MIDI "
"Device`_ and `Example: Change the Color of a Cube using MIDI`_ before "
"reading these instructions."
msgstr ""
"iPadまたはiPhoneを、ボタン、ノブ、およびスライダーを備えたタッチスクリーンコントローラーとして使用できます。これらの手順を読む前に、 `MIDIデ"
"バイスの構成`_ および `例：MIDIを使用してキューブの色を変更する`_ のセクションをお読みください。"

#: ../../source/script/midi-tutorial.rst:80
msgid ""
"Download our recommended app `touchosc "
"<https://hexler.net/software/touchosc>`_."
msgstr "おすすめのアプリ`touchosc<https://hexler.net/software/touchosc>`_をダウンロードしてください。"

#: ../../source/script/midi-tutorial.rst:81
msgid "Download the Windows bridge."
msgstr "Windowsブリッジをダウンロードします。"

#: ../../source/script/midi-tutorial.rst:82
msgid ""
"Set up either through USB or through your local WIFI network in the "
"settings menu."
msgstr "設定メニューで、USBまたはローカルWIFIネットワークを介してセットアップします。"

#: ../../source/script/midi-tutorial.rst:83
msgid ""
"If you setup your `onEventReceived` to log the messages coming in, you "
"can see which knobs send what information that you can use to call custom"
" functions."
msgstr ""
"着信メッセージをログに記録するように`onEventReceived`を設定すると、カスタム関数の呼び出しに使用できる情報を送信するノブを確認できます。"

#: ../../source/script/midi-tutorial.rst:84
msgid ""
"There are some interesting components like the accelerometer which you "
"can use as well!"
msgstr "加速度センサーのような面白い部品もあるので、それも使ってみてください!"

#: ../../source/script/midi-tutorial.rst:88
msgid "Configure Your MIDI Device"
msgstr "MIDIデバイスを構成する"

#: ../../source/script/midi-tutorial.rst:90
msgid "Once you've set up your MIDI Controller Device, you need to configure it."
msgstr "MIDIコントローラーデバイスをセットアップしたら、設定を行う必要があります。"

#: ../../source/script/midi-tutorial.rst:92
msgid ""
"Here is a general recommended MIDI config function you can run in a "
"script. With it, you can see a list of MIDI devices that are currently "
"connected::"
msgstr ""
"スクリプトで実行できる一般的に推奨されるMIDI構成関数は次のとおりです。これを使用すると、現在接続されているMIDIデバイスのリストを表示できます。"

#: ../../source/script/midi-tutorial.rst:117
msgid ""
"After you run the configuration function, you will want to connect to "
"``midiMessages``::"
msgstr "設定関数を実行した後、``midiMessages`` に接続します。"

#: ../../source/script/midi-tutorial.rst:133
msgid "Example: Change the Color of a Cube using MIDI"
msgstr "例：MIDIを使用して立方体の色を変更する"

#: ../../source/script/midi-tutorial.rst:135
msgid "Let's change the color of a cube entity in Vircadia using MIDI."
msgstr "MIDIを使用して、Vircadiaの立方体エンティティの色を変更してみましょう。"

#: ../../source/script/midi-tutorial.rst:137
msgid ""
"Use this method to figure out the MIDI range of ``0`` to ``127`` to be "
"any other output range you want using linear interpolation::"
msgstr "この方法を使用して、``0`` ら``127`` までのMIDI範囲を、線形補間を使用して必要な他の出力範囲に設定します。"

#: ../../source/script/midi-tutorial.rst:144
msgid "Since colors go from ``0`` to ``255``, we could do the following::"
msgstr "色は``0``から``255``になるので、次のことができます。"

#: ../../source/script/midi-tutorial.rst:153
msgid "Then use ``onEventReceived`` to change the color of the cube::"
msgstr "次に、``onEventReceived`` を使用して、立方体の色を変更します。"

#: ../../source/script/midi-tutorial.rst:161
msgid ""
"Print the ``eventData`` in your ``onEventReceived`` function to see each "
"controller and its output. This will tell you everything you need to know"
" about how to route the right key, slider, knob, or button to to your "
"intended JavaScript functions."
msgstr ""
"各コントローラとその出力を見るために、 ``onEventReceived`` 関数で ``eventData`` を出力してください。これにより、正しい"
"キー、スライダー、ノブ、ボタンを目的のJavaScript関数にルーティングするための必要な情報を得ることができます。"

#: ../../source/script/midi-tutorial.rst:163
msgid ""
"If you want to use to control something outside of Vircadia, or to "
"directly call a MIDI event to control something in Vircadia, you can use "
"the function::"
msgstr ""
"Vircadiaの外部で何かを制御するために使用する場合、またはVircadiaで何かを制御するためにMIDIイベントを直接呼び出すために使用する場合は、"
"次の関数を使用できます。"

#: ../../source/script/midi-tutorial.rst:170
msgid "Other Ways to Use MIDI in Vircadia"
msgstr "VircadiaでMIDIを使用する他の方法"

#: ../../source/script/midi-tutorial.rst:172
msgid "Use Ableton to sequence out entire animations of your domain."
msgstr "Abletonを使用して、ドメインのアニメーション全体をシーケンス処理します。"

#: ../../source/script/midi-tutorial.rst:173
msgid ""
"Control real world devices by the movements things make in Vircadia and "
"vice versa (think update loop)"
msgstr "Vircadiaでの動きで現実世界の機器を制御し、逆にVircadiaでの動きで現実世界の機器を制御します（更新ループを考えてください）"

#: ../../source/script/midi-tutorial.rst:174
msgid ""
"Setup your iPad to be a whole group of buttons that you can press at any "
"time to trigger events in your domain at will."
msgstr "iPadをボタン群として設定し、いつでも押せるようにすることで、ドメイン内のイベントを自在に発火させることができます。"

#: ../../source/script/midi-tutorial.rst:178
msgid "`API Reference: MIDI <https://apidocs.vircadia.dev/Midi.html>`_"
msgstr "`APIリファレンス：MIDI <https://apidocs.vircadia.dev/Midi.html>` _"

#: ../../source/script/midi-tutorial.rst:179
msgid "`MIDI-API <../_static/resources/script/MidiAPI.txt>`_"
msgstr "`MIDI-API <../_static/resources/script/MidiAPI.txt>`_"

#: ../../source/script/midi-tutorial.rst:180
msgid "`MIDI-Test <../_static/resources/script/midiTest.js>`_"
msgstr "`MIDI-Test <../_static/resources/script/midiTest.js>`_"

#: ../../source/script/midi-tutorial.rst:181
msgid "`MIDI-Examples <../_static/resources/script/MIDI-Example.js>`_"
msgstr "`MIDI-サンプル <../_static/resources/script/MIDI-Example.js>`_"

#: ../../source/script/server-entity-scripts.md:3
msgid ""
"You can make content in Vircadia interactive by attaching scripts to "
"entities. *Server entity scripts* are entity scripts that run on the "
"server (or domain) that hosts the entity. These scripts run persistently "
"in a domain, even if there are no users present. This means that there is"
" only one instance of the script is running at a time, and it is running "
"on the server. Any behavior that is controlled by your script will be "
"seen and heard by everyone in the domain."
msgstr ""
"Vircadiaのコンテンツは、エンティティにスクリプトを添付することでインタラクティブにすることができます。*サーバエンティティスクリプト*は、エンティ"
"ティをホストするサーバ（またはドメイン）上で実行されるエンティティスクリプトです。これらのスクリプトは、ユーザーがいない場合でも、ドメイン内で永続的に実行"
"されます。つまり、一度に実行されるスクリプトのインスタンスは1つだけであり、サーバー上で実行されます。クリプトによって制御される動作は、ドメイン内のすべて"
"の人に表示され、聞こえます。"

#: ../../source/script/server-entity-scripts.md:6
msgid ""
"[Attach a Server Entity Script to an Entity](#attach-a-server-entity-"
"script-to-an-entity)"
msgstr ""
"[サーバーエンティティスクリプトをエンティティにアタッチする](#attach-a-server-entity-script-to-an-entity)"

#: ../../source/script/server-entity-scripts.md:7
msgid "[Example of a Server Entity Script](#example-of-a-server-entity-script)"
msgstr "[サーバーエンティティスクリプトの例](#example-of-a-server-entity-script)"

#: ../../source/script/server-entity-scripts.md:8
msgid "[Script API](#script-api)"
msgstr "[スクリプト API](#script-api)"

#: ../../source/script/server-entity-scripts.md:10
msgid "Attach a Server Entity Script to an Entity"
msgstr "サーバーエンティティスクリプトをエンティティに添付する"

#: ../../source/script/server-entity-scripts.md:11
msgid "To attach a server entity script to an entity:"
msgstr "サーバーエンティティスクリプトをエンティティにアタッチするには："

#: ../../source/script/server-entity-scripts.md:15
msgid "For 'Server Script', enter the URL to your server entity script."
msgstr "[サーバースクリプト]には、サーバーエンティティスクリプトへのURLを入力します。"

#: ../../source/script/server-entity-scripts.md:22
msgid "Example of a Server Entity Script"
msgstr "サーバーエンティティスクリプトの例"

#: ../../source/script/server-entity-scripts.md:23
msgid ""
"The following script modifies the intensity of a light entity, so that it"
" flickers tea lights."
msgstr "次のスクリプトは、ライトエンティティの強度を変更して、ティーライトを点滅させます。"

#: ../../source/script/server-entity-scripts.md:49
msgid ""
"This script is a good example of a server entity script because it only "
"needs one actor to update the intensity of the light. The same script "
"could be attached as an entity client script, but all clients who could "
"see the tea light would be editing the entity to vary the intensity of "
"the light to flicker it."
msgstr ""
"このスクリプトは、光の強さを更新するのに必要なアクターは1つだけなので、サーバーエンティティのスクリプトの良い例と言えます。同じスクリプトをエンティティク"
"ライアントスクリプトとして添付することもできますが、ティーライトを見ることができるすべてのクライアントが、ライトの強さを変化させて明滅させるためにエンティ"
"ティを編集することになります。"

#: ../../source/script/server-entity-scripts.md:51
msgid "Script API"
msgstr "スクリプトAPI"

#: ../../source/script/server-entity-scripts.md:53
msgid ""
"The Entity Script Server does not have access to all of the listed "
"components of the API. APIs for avatars, controllers, recording, "
"overlays, and mouse and keyboard events are not available in the Entity "
"Script Server."
msgstr ""
"エンティティスクリプトサーバーは、APIのリストされたコンポーネントのすべてにアクセスできるわけではありません。アバター、コントローラー、記録、オーバーレ"
"イ、およびマウスとキーボードのイベント用のAPIは、エンティティスクリプトサーバーでは使用できません。"

#: ../../source/script/server-entity-scripts.md:55
msgid ""
"Learn more about what APIs are available to server entity scripts "
"[here](https://apidocs.vircadia.dev/Entities.html)."
msgstr ""
"サーバーエンティティスクリプトで使用できるAPIの詳細については、[こちら](https://apidocs.vircadia.dev/Entities."
"html)をご覧ください。"

#: ../../source/script/write-scripts.md:3
msgid ""
"Vircadia's robust [JavaScript API](https://apidocs.vircadia.dev) provides"
" the tools for you to build great content and user experiences in VR."
msgstr ""
"Vircadiaの堅牢な[JavaScriptAPI](https://apidocs.vircadia."
"dev)は、VRで優れたコンテンツとユーザーエクスペリエンスを構築するためのツールを提供します。"

#: ../../source/script/write-scripts.md:5
msgid ""
"In this section, you can find simple code samples to do common tasks in "
"Vircadia. To see these code samples in action, copy the code to a file, "
"`testScripts.js`, saved somewhere on your computer."
msgstr ""
"このセクションでは、Vircadiaで一般的なタスクを実行するための簡単なコードサンプルを見つけることができます。これらのコードサンプルの動作を確認するに"
"は、コードをコンピューターのどこかに保存されている`testScripts.js`ファイルにコピーします。"

#: ../../source/script/write-scripts.md:14
msgid "[Write to the Debug Window](#write-to-the-debug-window)"
msgstr "[デバッグウィンドウへの書き込み](#write-to-the-debug-window)"

#: ../../source/script/write-scripts.md:15
msgid "[Create an Entity](#create-an-entity)"
msgstr "[エンティティを作成](#create-an-entity)"

#: ../../source/script/write-scripts.md:16
msgid "[Edit an Entity](#edit-an-entity)"
msgstr "[エンティティの編集](#edit-an-entity)"

#: ../../source/script/write-scripts.md:18
msgid "Write to the Debug Window"
msgstr "デバッグウィンドウへの出力"

#: ../../source/script/write-scripts.md:19
msgid ""
"This is an example of an [interface script](interface-scripts) and cannot"
" be attached to an entity. It shows you how to print something to the "
"[debug window ](get-started-with-scripting.html#debug-window). In this "
"example, we'll start with a simple \"Hello, World\" script."
msgstr ""
"これは[インターフェイススクリプト](interface-scripts)の例であり、エンティティにアタッチすることはできない。これは、何かを["
"デバッグウィンドウ ](get-started-with-scripting.html#debug-window) "
"に出力する方法を示しています。この例では、まず単純な「Hello, World」スクリプトから始めます。"

#: ../../source/script/write-scripts.md:25
#: ../../source/script/write-scripts.md:45
#: ../../source/script/write-scripts.md:68
msgid ""
"Copy and paste this in a file `testScript.js` and save it on your "
"computer."
msgstr "これをコピーして`testScript.js`ファイルに貼り付け、コンピューターに保存します。"

#: ../../source/script/write-scripts.md:26
msgid ""
"When you [load and run this script](get-started-with-scripting.html#load-"
"and-run-a-script), it will write the words \"Hello, World\" to the 'Debug"
" Window' in Vircadia. ![](_images/hello-world.png)"
msgstr ""
"このスクリプトを [ロードして実行](get-started-with-scripting.html#load-and-run-a-script) "
"すると、Vircadia の [デバッグウィンドウ] に 「Hello, World」 という文字が出力されます。![](_images/hello-"
"world.png)"

#: ../../source/script/write-scripts.md:29
msgid "Create an Entity"
msgstr "エンティティの作成"

#: ../../source/script/write-scripts.md:30
msgid ""
"Instead of [using the Create app to add an entity](../create/entities"
"/create-entities), you can create one using an [interface script"
"](interface-scripts)."
msgstr ""
"[Createアプリを使用してエンティティを追加する](../create/entities/create-entities)の代わりに、["
"interface script](interface-scripts)を使用して作成できます。"

#: ../../source/script/write-scripts.md:46
msgid ""
"When you [load and run this script](get-started-with-scripting.html#load-"
"and-run-a-script), it will locate your avatar in the domain, create a new"
" entity based on the customized properties that you set, then print a "
"line to the 'Debug Window'. In this case, the entity will be a red box. "
"![](_images/add-entity.png)"
msgstr ""
"[このスクリプトを読み込んで実行](get-started-with-scripting.html#load-and-run-a-script)すると、ド"
"メイン内のアバターが検索され、カスタマイズされたプロパティに基づいて新しいエンティティが作成されます。設定してから、[デバッグウィンドウ]に1行出力します"
"。この場合、エンティティは赤いボックスになります。![](_images/add-entity.png)"

#: ../../source/script/write-scripts.md:49
msgid "Edit an Entity"
msgstr "エンティティの編集"

#: ../../source/script/write-scripts.md:50
msgid ""
"To manipulate an entity's properties, you can use `Entities.editEntity`in"
" an [interface script](interface-scripts)."
msgstr ""
"エンティティのプロパティを操作するには、[interface script](interface-scripts)で`Entities."
"editEntity`を使用できます。"

#: ../../source/script/write-scripts.md:69
msgid ""
"When you [load and run this script](get-started-with-scripting.html#load-"
"and-run-a-script), it will locate your avatar in the domain, create a new"
" entity based on the customized properties that you set, then print the "
"color of that entity to the 'Debug Window'. Then, the script changes the "
"color of the entity to red, and prints the new color in the 'Debug "
"Window'. ![](_images/edit-entity.png)"
msgstr ""
"[このスクリプトを読み込んで実行](get-started-with-scripting.html#load-and-run-a-script)すると、ド"
"メイン内のアバターが検索され、カスタマイズされたプロパティに基づいて新しいエンティティが作成されます。設定してから、そのエンティティの色が[デバッグウィン"
"ドウ]に出力されます。次に、スクリプトはエンティティの色を赤に変更し、[デバッグウィンドウ]に新しい色が出力されます。![](_images/edit-"
"entity.png)"

#: ../../source/script/write-scripts.md:77
msgid ""
"[Load and Run a Script](get-started-with-scripting.html#load-and-"
"run-a-script)"
msgstr "[スクリプトの読み込みと実行](get-started-with-scripting.html#load-and-run-a-script)"

#: ../../source/script/write-scripts.md:78
msgid "[Interface Scripts](interface-scripts)"
msgstr "[インターフェーススクリプト](interface-scripts)"

#~ msgid ""
#~ "`MIDI-API "
#~ "<https://cdn.highfidelity.com/milad/production/Midi/MidiAPI.txt>`_"
#~ msgstr ""

#~ msgid ""
#~ "`MIDI-Test "
#~ "<https://cdn.highfidelity.com/milad/production/Midi/midiTest.js>`_"
#~ msgstr ""

#~ msgid ""
#~ "`MIDI-Examples "
#~ "<https://cdn.highfidelity.com/milad/production/Midi/MIDI-"
#~ "Example.js>`_"
#~ msgstr ""

#~ msgid "Create a folder called scripts in the same location as your FBX file."
#~ msgstr ""

#~ msgid ""
#~ "You can make content in High "
#~ "Fidelity interactive by attaching scripts "
#~ "to entities. Client entity scripts are"
#~ " entity scripts that run locally on"
#~ " each user's computer. When a user"
#~ " comes into contact with the entity,"
#~ " it will \"preload\" (or run) the "
#~ "script, then \"unload\" (or stop) the"
#~ " script when the user leaves."
#~ msgstr ""

#~ msgid ""
#~ "When you script for VR worlds like"
#~ " High Fidelity, you need 3D math "
#~ "operations to compute the position and"
#~ " orientation of 3D objects and "
#~ "avatars in-world. We cannot simply "
#~ "add two vectors. To script 3D math"
#~ " operations and to determine position "
#~ "and orientation information of avatars, "
#~ "you can use the following namespaces "
#~ "in our JavaScript API:"
#~ msgstr ""

#~ msgid ""
#~ "When writing a script in High "
#~ "Fidelity, you might need to access "
#~ "the methods or objects in an "
#~ "external JS file or get information "
#~ "from a JSON file. For example, if"
#~ " you're writing a script to make "
#~ "your avatar wave, you might need "
#~ "to use some methods that already "
#~ "exist in an external JS file. You"
#~ " can do this using the require "
#~ "method in the Scripts namespace of "
#~ "our API."
#~ msgstr ""

#~ msgid ""
#~ "We created a MIDI class (with the"
#~ " help of one of our community "
#~ "members, Brainstormer) that can be used"
#~ " to control your environment in High"
#~ " Fidelity. For example, we used MIDI"
#~ " to control lighting in a domain "
#~ "for a music show."
#~ msgstr ""

#~ msgid ""
#~ "You can either connect a real "
#~ "controller device that you use to "
#~ "control your environment in High "
#~ "Fidelity, or create a virtual one "
#~ "that will help you connect to "
#~ "other virtual devices."
#~ msgstr ""

#~ msgid ""
#~ "To `connect Ableton Live "
#~ "<https://help.ableton.com/hc/en-us/articles/209774225-Using-"
#~ "virtual-MIDI-buses>`_ directly to High"
#~ " Fidelity’s Interface client, we recommend"
#~ " the following virtual tools:"
#~ msgstr ""

#~ msgid "Let's change the color of a cube entity in High Fidelity using MIDI."
#~ msgstr ""

#~ msgid ""
#~ "If you want to use to control "
#~ "something outside of High Fidelity, or"
#~ " to directly call a MIDI event "
#~ "to control something in Hifi, you "
#~ "can use the function::"
#~ msgstr ""

#~ msgid "Other Ways to Use MIDI in High Fidelity"
#~ msgstr ""

#~ msgid ""
#~ "Control real world devices by the "
#~ "movements things make in Hifi and "
#~ "vice versa (think update loop)"
#~ msgstr ""

#~ msgid ""
#~ "You can make content in High "
#~ "Fidelity interactive by attaching scripts "
#~ "to entities. Server entity scripts are"
#~ " entity scripts that run on the "
#~ "server (or domain) that hosts the "
#~ "entity. These scripts run persistently "
#~ "in a domain, even if there are "
#~ "no users present. This means that "
#~ "there is only one instance of the"
#~ " script is running at a time, "
#~ "and it is running on the server."
#~ " Any behavior that is controlled by"
#~ " your script will be seen and "
#~ "heard by everyone in the domain."
#~ msgstr ""

#~ msgid ""
#~ "High Fidelity's robust JavaScript API "
#~ "provides the tools for you to "
#~ "build great content and user experiences"
#~ " in VR."
#~ msgstr ""

#~ msgid ""
#~ "In this section, you can find "
#~ "simple code samples to do common "
#~ "tasks in High Fidelity. To see "
#~ "these code samples in action, copy "
#~ "the code to a file, testScripts.js, "
#~ "saved somewhere on your computer."
#~ msgstr ""

#~ msgid ""
#~ "When you load and run this script,"
#~ " it will locate your avatar in "
#~ "the domain, create a new entity "
#~ "based on the customized properties that"
#~ " you set, then print a line to"
#~ " the 'Debug Window'. In this case,"
#~ " the entity will be a red "
#~ "box.<br />"
#~ msgstr ""

#~ msgid "From the menu, go to Content > Scripts."
#~ msgstr ""

#~ msgid ""
#~ "In the Persistent Scripts section, click"
#~ " + and paste the URL to your"
#~ " script under 'Script URL'."
#~ msgstr ""

#~ msgid ""
#~ "The following script counts the number"
#~ " of entities found in a domain "
#~ "using High Fidelity's EntityViewer."
#~ msgstr ""

#~ msgid "See Also"
#~ msgstr ""

#~ msgid "Configure Your Domain Settings"
#~ msgstr ""

#~ msgid ""
#~ "Create a folder called scripts in "
#~ "the same location as your FBX, "
#~ "GLB, or glTF file."
#~ msgstr ""

#~ msgid "In Interface, go to Edit > Package Model as .fst"
#~ msgstr ""

#~ msgid ""
#~ "For 'Script Directory', enter the path"
#~ " to the scripts folder you created"
#~ " above."
#~ msgstr ""

#~ msgid ""
#~ "Add a line telling the avatar "
#~ "where to find the script file "
#~ "using the syntax script = [SCRIPT "
#~ "URL]."
#~ msgstr ""

#~ msgid ""
#~ "You can add multiple scripts to "
#~ "your avatar by adding multiple script"
#~ " = url lines."
#~ msgstr ""

#~ msgid ""
#~ "This example script uses the MyAvatar"
#~ " namespace to determine if your "
#~ "avatar's hand moves. Upon detecting "
#~ "movement, the script makes your avatar"
#~ " launch balls. It also uses some "
#~ "other namespaces such as Entities (to"
#~ " create the ball you will launch) "
#~ "and Vec3 (to determine the right "
#~ "positions and distances). Add it to "
#~ "your avatar to see how it works."
#~ msgstr ""

#~ msgid "API Reference"
#~ msgstr ""

#~ msgid ""
#~ "You can make content in Vircadia "
#~ "interactive by attaching scripts to "
#~ "entities. Client entity scripts are "
#~ "entity scripts that run locally on "
#~ "each user's computer. When a user "
#~ "comes into contact with the entity, "
#~ "it will \"preload\" (or run) the "
#~ "script, then \"unload\" (or stop) the"
#~ " script when the user leaves."
#~ msgstr ""

#~ msgid "In Interface, pull up your tablet or HUD and go to Create."
#~ msgstr ""

#~ msgid ""
#~ "In the Create app, go to the "
#~ "'Properties' tab and scroll down to "
#~ "the 'Behavior' section."
#~ msgstr ""

#~ msgid ""
#~ "This example is written as a "
#~ "JavaScript class prototype function, and "
#~ "it uses the mouse event "
#~ "clickDownOnEntity(). When the user clicks "
#~ "on an entity, clickDownOnEntity() triggers "
#~ "the function associated with that click"
#~ " event. In this case, it changes "
#~ "the entity's color back and forth "
#~ "between yellow and magenta."
#~ msgstr ""

#~ msgid ""
#~ "In Interface, go to Edit > Running"
#~ " Scripts or press <kbd "
#~ "class=\"keyboard\">Ctrl</kbd> + <kbd "
#~ "class=\"keyboard\">J</kbd> on your keyboard."
#~ msgstr ""

#~ msgid ""
#~ "Vircadia's robust JavaScript API provides "
#~ "the tools for you to build great"
#~ " content and user experiences in VR."
#~ " We've compiled some advanced JavaScript"
#~ " tips you can use while scripting "
#~ "for Vircadia."
#~ msgstr ""

#~ msgid ""
#~ "You can use the Scripting Console "
#~ "in Interface to try out the "
#~ "examples on this page. The output "
#~ "will be visible in the console "
#~ "itself."
#~ msgstr ""

#~ msgid "On This Page:"
#~ msgstr ""

#~ msgid ""
#~ "Vec3: The Vec3 API has facilities "
#~ "for generating and manipulating 3-dimensional"
#~ " vectors."
#~ msgstr ""

#~ msgid ""
#~ "Quat: The Quat API provides facilities"
#~ " for generating and manipulating "
#~ "quaternions."
#~ msgstr ""

#~ msgid ""
#~ "MyAvatar: The MyAvatar API provides "
#~ "facilities for manipulating avatars."
#~ msgstr ""

#~ msgid ""
#~ "To get your avatar's current position,"
#~ " use the MyAvatar namespace. MyAvatar "
#~ "contains properties with information related"
#~ " to your avatar. Use the position "
#~ "property, MyAvatar.position, which returns an"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "In the following example, we are "
#~ "using the JSON.stringify method to "
#~ "convert the JavaScript object (returned "
#~ "by MyAvatar.position) to a data string"
#~ " that can be sent over the "
#~ "server."
#~ msgstr ""

#~ msgid ""
#~ "Get your avatar's orientation in the "
#~ "Scripting Console by using the "
#~ "MyAvatar.orientation property:"
#~ msgstr ""

#~ msgid ""
#~ "You can use the Quat namespace to"
#~ " get the direction which your avatar"
#~ " is facing. Pass your avatar's "
#~ "orientation to Quat.getForward to get a"
#~ " vector describing which direction you "
#~ "are facing on the world axis."
#~ msgstr ""

#~ msgid ""
#~ "Use the Vec3 namespace and the "
#~ "direction your avatar is facing to "
#~ "return the position at which you "
#~ "can make your entity appear. This "
#~ "position is 1m away from your "
#~ "avatar."
#~ msgstr ""

#~ msgid ""
#~ "Use Vec3.sum to return a new "
#~ "vector representing how far away an "
#~ "entity will appear from your avatar."
#~ msgstr ""

#~ msgid ""
#~ "When writing a script in Vircadia, "
#~ "you might need to access the "
#~ "methods or objects in an external "
#~ "JS file or get information from a"
#~ " JSON file. For example, if you're"
#~ " writing a script to make your "
#~ "avatar wave, you might need to use"
#~ " some methods that already exist in"
#~ " an external JS file. You can "
#~ "do this using the require method "
#~ "in the Scripts namespace of our "
#~ "API."
#~ msgstr ""

#~ msgid "example.js"
#~ msgstr ""

#~ msgid ""
#~ "In example.js, you are exporting two "
#~ "functions that print either Hello or "
#~ "Goodbye, depending on which function you"
#~ " call, to the console. Now, let's "
#~ "use require in your main script."
#~ msgstr ""

#~ msgid "Create a JS script called main.js."
#~ msgstr ""

#~ msgid ""
#~ "When you use the require method, "
#~ "you are making any function or "
#~ "object exported from example.js available "
#~ "to main.js. This means that main.js "
#~ "now has access to functions that "
#~ "will print either Hello or Goodbye "
#~ "to the console. In the above "
#~ "example, we are printing Hello to "
#~ "the console when we run main.js."
#~ msgstr ""

#~ msgid ""
#~ "Each signal usually gets passed in "
#~ "arguments, and you can refer to "
#~ "the API documentation to see what "
#~ "a signal will provide you, such as"
#~ " the enabled property passed into "
#~ "collision changed."
#~ msgstr ""

#~ msgid ""
#~ "You can make content in Vircadia "
#~ "interactive by attaching scripts to "
#~ "entities. Server entity scripts are "
#~ "entity scripts that run on the "
#~ "server (or domain) that hosts the "
#~ "entity. These scripts run persistently "
#~ "in a domain, even if there are "
#~ "no users present. This means that "
#~ "there is only one instance of the"
#~ " script is running at a time, "
#~ "and it is running on the server."
#~ " Any behavior that is controlled by"
#~ " your script will be seen and "
#~ "heard by everyone in the domain."
#~ msgstr ""

#~ msgid "Learn more about what APIs are available to server entity scripts here."
#~ msgstr ""

#~ msgid ""
#~ "Vircadia's robust JavaScript API provides "
#~ "the tools for you to build great"
#~ " content and user experiences in VR."
#~ msgstr ""

#~ msgid ""
#~ "In this section, you can find "
#~ "simple code samples to do common "
#~ "tasks in Vircadia. To see these "
#~ "code samples in action, copy the "
#~ "code to a file, testScripts.js, saved"
#~ " somewhere on your computer."
#~ msgstr ""

#~ msgid ""
#~ "This is an example of an interface"
#~ " script and cannot be attached to "
#~ "an entity. It shows you how to "
#~ "print something to the debug window "
#~ ". In this example, we'll start "
#~ "with a simple \"Hello, World\" script."
#~ msgstr ""

#~ msgid ""
#~ "Copy and paste this in a file "
#~ "testScript.js and save it on your "
#~ "computer."
#~ msgstr ""

#~ msgid ""
#~ "When you load and run this script,"
#~ " it will write the words \"Hello, "
#~ "World\" to the 'Debug Window' in "
#~ "High Fidelity."
#~ msgstr ""

#~ msgid ""
#~ "Instead of using the Create app to"
#~ " add an entity, you can create "
#~ "one using an interface script."
#~ msgstr ""

#~ msgid ""
#~ "When you load and run this script,"
#~ " it will locate your avatar in "
#~ "the domain, create a new entity "
#~ "based on the customized properties that"
#~ " you set, then print a line to"
#~ " the 'Debug Window'. In this case,"
#~ " the entity will be a red box."
#~ msgstr ""

#~ msgid ""
#~ "To manipulate an entity's properties, "
#~ "you can use Entities.editEntityin an "
#~ "interface script."
#~ msgstr ""

#~ msgid ""
#~ "When you load and run this script,"
#~ " it will locate your avatar in "
#~ "the domain, create a new entity "
#~ "based on the customized properties that"
#~ " you set, then print the color "
#~ "of that entity to the 'Debug "
#~ "Window'. Then, the script changes the"
#~ " color of the entity to red, "
#~ "and prints the new color in the"
#~ " 'Debug Window'."
#~ msgstr ""

#~ msgid ""
#~ "Open your 'Domain Administration Panel'. "
#~ "If you are on a local sandbox, "
#~ "open it by clicking on the High"
#~ " Fidelity icon in the taskbar "
#~ "notifications and 'click Settings'."
#~ msgstr ""

#~ msgid ""
#~ "The following script counts the number"
#~ " of entities found in a domain "
#~ "using High Fidelity's "
#~ "[EntityViewer](https://apidocs.vircadia.dev/EntityViewer.html)."
#~ msgstr ""

#~ msgid ""
#~ "High Fidelity uses a 3D Cartesian "
#~ "coordinate system where the position "
#~ "vector of an entity or avatar "
#~ "looks like this:"
#~ msgstr ""

#~ msgid ""
#~ "When you [load and run this script"
#~ "](get-started-with-scripting.html#load-and-"
#~ "run-a-script), it will write the words"
#~ " \"Hello, World\" to the 'Debug "
#~ "Window' in High Fidelity. ![](_images"
#~ "/hello-world.png)"
#~ msgstr ""
